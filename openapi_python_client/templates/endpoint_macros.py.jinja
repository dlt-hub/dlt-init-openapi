{% from "property_templates/helpers.jinja" import guarded_statement %}
{% from "helpers.jinja" import safe_docstring %}

{% macro header_params(endpoint) %}
{% if endpoint.header_parameters %}
    {% for parameter in endpoint.header_parameters.values() %}
        {% set destination = 'headers["' +  parameter.name + '"]' %}
        {% import "property_templates/" + parameter.template as param_template %}
        {% if param_template.transform_header %}
            {% set statement = param_template.transform_header(parameter, parameter.python_name, destination) %}
        {% else %}
            {% set statement = destination + " = " + parameter.python_name %}
        {% endif %}
{{ guarded_statement(parameter, parameter.python_name, statement) }}
    {% endfor %}
{% endif %}
{% endmacro %}

{% macro cookie_params(endpoint) %}
{% if endpoint.cookie_parameters %}
    {% for parameter in endpoint.cookie_parameters.values() %}
        {% if parameter.required %}
cookies["{{ parameter.name}}"] = {{ parameter.python_name }}
        {% else %}
if {{ parameter.python_name }} is not UNSET:
    cookies["{{ parameter.name}}"] = {{ parameter.python_name }}
        {% endif %}
    {% endfor %}
{% endif %}
{% endmacro %}


{% macro query_params(endpoint) %}
{% if endpoint.query_parameters %}
{% for property in endpoint.query_parameters.values() %}
    {% set destination = property.python_name %}
    {% import "property_templates/" + property.template as prop_template %}
    {% if prop_template.transform %}
        {% set destination = "json_" + property.python_name %}
{{ prop_template.transform(property, property.python_name, destination) }}
    {% endif %}
    {%- if not property.json_is_dict %}
params["{{ property.name }}"] = {{ destination }}
    {% else %}
{{ guarded_statement(property, destination, "params.update(" + destination + ")") }}
    {% endif %}


{% endfor %}

params = {k: v for k, v in params.items() if v is not UNSET and v is not None}
{% endif %}
{% endmacro %}


{# The all the kwargs passed into an endpoint (and variants thereof)) #}
{% macro arguments(endpoint) %}
rest_client: RESTClient,
{% for parameter in endpoint.required_parameters.values() %}
{{ parameter.to_string() }},
{% endfor %}
{% for parameter in endpoint.optional_parameters.values() %}
{{ parameter.to_string() }},
{% endfor %}
{# Security #}
{% if endpoint.credentials_parameter %}
{{ endpoint.credentials_parameter.to_string('dlt.secrets.value') }},
{% endif %}
{% endmacro %}

{% macro resource_arguments(endpoint) %}
{% if endpoint.transformer %}
data: Any,
rest_client: RESTClient,
{% else %}
rest_client: RESTClient,
{% for parameter in endpoint.required_parameters.values() %}
{{ parameter.to_string() }},
{% endfor %}
{% endif %}
{% for parameter in endpoint.optional_parameters.values() %}
{{ parameter.to_string() }},
{% endfor %}
base_url: str = dlt.config.value,
{# Security #}
{% if endpoint.credentials %}
credentials: {{ endpoint.credentials.type_hint }} = dlt.secrets.value,
{% endif %}
data_json_path: Optional[str]="{{endpoint.data_json_path}}",
{% if endpoint.transformer %}
{# Render the dict of path params #}
path_parameter_paths: Dict[str, TJsonPath]={{ endpoint.transformer.path_params_mapping }}
{% endif %}
{% endmacro %}

{# Just lists all kwargs to endpoints as name=name for passing to other functions #}
{% macro kwargs(endpoint) %}
{% for parameter in endpoint.required_parameters.values() %}
{{ parameter.python_name }}={{ parameter.python_name }},    
{% endfor %}
{% for parameter in endpoint.optional_parameters.values() %}
{{ parameter.python_name }}={{ parameter.python_name }},    
{% endfor %}    
{% endmacro %}

{% macro transformer_kwargs(endpoint) %}
{#{% for parameter in endpoint.required_parameters.values() %} #}
{#{{ parameter.python_name }}={{ parameter.python_name }},    #]
{#{% endfor %} #}
{% for parameter in endpoint.optional_parameters.values() %}
{{ parameter.python_name }}={{ parameter.python_name }},    
{% endfor %}
{% endmacro %}

{% macro docstring_content(endpoint, return_string, is_detailed) %}
{% if endpoint.summary %}{{ endpoint.summary | wordwrap(100)}}

{% endif -%}
{% if endpoint.parent %}
Parent endpoint: {{ endpoint.parent.path }}
{% endif %}

{%- if endpoint.description %} {{ endpoint.description | wordwrap(100) }}

{% endif %}
{% if not endpoint.summary and not endpoint.description %}
{# Leave extra space so that Args or Returns isn't at the top #}

{% endif %}
{% set all_parameters = endpoint.list_all_parameters %}
{% if all_parameters %}
Args:
    {% for parameter in all_parameters %}
    {{ parameter.to_docstring() | wordwrap(90) | indent(8) }}
    {% endfor %}
{% endif %}

Returns:
    Iterator of '{{ endpoint.table_name }}' items
{% endmacro %}

{% macro docstring(endpoint, return_string, is_detailed) %}
{{ safe_docstring(docstring_content(endpoint, return_string, is_detailed)) }}
{% endmacro %}
