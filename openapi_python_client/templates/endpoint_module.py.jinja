{% macro generate_resource(endpoint) %}
from http import HTTPStatus
from typing import Any, Dict, List, Optional, Union, cast, Iterator
import dlt

from dlt.sources.helpers import requests

from .types import UNSET, Unset
from .utils import extract_nested_data, extract_iterate_parent
from .api_helpers import build_query_parameters, build_formatted_url, TParameterMap

{% for imp_string in endpoint.get_imports() %}
{{ imp_string }}
{% endfor %}

{% from "endpoint_macros.py.jinja" import header_params, cookie_params, query_params,
    arguments, resource_arguments, kwargs, transformer_kwargs, parse_response, docstring %}

{# {% set return_string = endpoint.response_type() %} #}
{% set return_string = "Any" %}
{% set parsed_responses = (endpoint.responses | length > 0) and return_string != "Any" %}

{% if endpoint.transformer %}
@dlt.transformer(table_name="{{ endpoint.table_name}}")
def {{ endpoint.python_name }}({{ resource_arguments(endpoint) | indent(4) }}) -> Iterator[{{ return_string}}]:
{% else %}
@dlt.resource(table_name="{{ endpoint.table_name }}")
def {{ endpoint.python_name }}({{ resource_arguments(endpoint) | indent(4) }}) -> Iterator[{{ return_string}}]:
{% endif %}
    {{ docstring(endpoint, return_string, is_detailed=false) | indent(4) }}
    endpoint_url = "{{ endpoint.path }}"
    params_meta: TParameterMap = {{ endpoint.request_args_meta_str }}
    {% if endpoint.transformer %}
    params_dict: Dict[str, Any] = dict(
        {{ transformer_kwargs(endpoint) }}
    )
    for child_kwargs in extract_iterate_parent(data, path_parameter_paths, endpoint_url):
        formatted_url = build_formatted_url(
            endpoint_url,
            dict(params_dict, **child_kwargs),
            params_meta
        )
        query_params = build_query_parameters(
            dict(params_dict, **child_kwargs),
            params_meta
        )
        yield from rest_client.paginate(
            formatted_url,
            "GET",
            params=query_params,
            {% if endpoint.credentials %}
            auth=credentials,
            {% endif %}
            data_selector=data_json_path,
        )
    {% else %}
    params_dict: Dict[str, Any] = dict({{ kwargs(endpoint) }})
    formatted_url = build_formatted_url(endpoint_url, params_dict, params_meta)
    query_params = build_query_parameters(params_dict, params_meta)
    yield from rest_client.paginate(
        formatted_url,
        "GET",
        params=query_params,
        {% if endpoint.credentials %}
        auth=credentials,
        {% endif %}
        data_selector=data_json_path,
    )
    {% endif %}
{% endmacro %}
