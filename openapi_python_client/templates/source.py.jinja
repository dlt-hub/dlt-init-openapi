from typing import List

from dlt.extract.source import DltResource

{# Import all resources #}
{% for collection in endpoint_collections.values() %}
{% for import_string in collection.imports_from_root %}
{{ import_string }}
{% endfor %}
{% endfor %}

{% for import_string  in imports %}
{{ import_string }}
{% endfor %}

import dlt

__source_name__ = "{{ source_name }}"

@dlt.source
def {{ source_name }}(
        {% if credentials %}
        {{ credentials.to_string('dlt.config.value') }},
        {% endif %}
        base_url: str = dlt.config.value,
) -> List[DltResource]:
    # Root list endpoints
    resources = {}
    {% for collection in endpoint_collections.values() %}
    {% for endpoint in collection.root_endpoints %}
    resources["{{ endpoint.python_name }}"] = {{ endpoint.python_name }}(
        {% if credentials and endpoint.credentials_parameter %}
        {{ credentials.python_name }} = {{ credentials.python_name }},
        {% endif %}
        base_url=base_url
    )
    {% endfor %}
    {% endfor %}

    # Transformer endpoints which depend on list endpoints
    {% for collection in endpoint_collections.values() %}
    {% for endpoint in collection.transformer_endpoints %}
    resources["{{ endpoint.python_name }}"] = resources["{{ endpoint.parent.python_name }}"] | {{ endpoint.python_name }}(
        {% if credentials and endpoint.credentials_parameter %}
        {{ credentials.python_name }} = {{ credentials.python_name }},
        {% endif %}
        base_url=base_url
    )
    {% endfor %}
    {% endfor %}

    return list(resources.values())
