openapi: 3.0.2
info:
  title: News Pilot
  description: >

    ### NewsPilot - sharing trusted public service online news via PSM platforms
    among EBU Members


    #### Introduction

    This documentation is a technical introduction into the NewsPilot. It is
    aimed for people who 

    have web development experience. 


    If you are not a technical person who needs introduction to the system, we
    have prepared 

    two detailed descriptions of both news monitoring and news recommendation
    functionalities. 

    They can be found here:

    - **[Monitoring Tool User
    Guide](https://lavender-blizzard-7fb.notion.site/Eurovision-News-Monitoring-Tool-262721ef2da84e51a90ceeee202da8d0)**

    - **[ERB User
    Guide](https://lavender-blizzard-7fb.notion.site/EBU-Recommendation-Box-bc9c86c9394242e2bfcda3c979dde856)**


    #### Available servers


    * **[Staging server](https://stage.pilot.ebu.io)** - Go to place to build
    and test an integration with the NewsPilot.

    Feel free to play around and break things. Will always have the newest
    features, 

    but can experience hiccups due to being the place to test release
    candidates. 

    **Warning!** The server is updated nightly with the newest copy of
    production database, 

    so all work will be overwritten. 


    * **[Production server](https://pilot.ebu.io/)** - Please use other servers
    for 

    any experiments or new features tests


    #### Authentication

    All of the API endpoints use JWT authentication. To obtain them you need
    client_id and client_secret. 

    Those are generated per organisation. If your administrator does not have
    your organisation's client credentials,

    please contact us using slack or by email [noir@ebu.ch](mailto:noir@ebu.ch)


    Each generated token is valid for 1 hour and can be refreshed. There is no
    limit to how many tokens can be valid 

    at the same time for a client, so you can request multiple if you need to. 


    If you have the required credentials obtaining a token is as simple as
    sending a [GET](/api/docs#/Auth/get_access_token_api_oauth_access_token_get)
    request to

    `/api/oauth/access_token`. Then add the token in an `Authorization: Bearer
    <token>` header for all further requests.  


    !!! WARNING !!!The static header authentication token is deprecated and will
    be removed on 30.04.2022If your integration still uses the static token
    authentication flow, please migrate to JWT auth token flow.We have prepared
    a [migration
    guide](https://terms-rules.s3.eu-west-1.amazonaws.com/JWTMigrationGuide.pdf)
    to help you with the processIf you require assistance please reach out using
    the NewsPilot slack or directly to glimos@ebu.ch


    #### Basic push integration with the NewsPilot

    For a basic integration you will not need to use more than couple of
    endpoints.


    ##### How to create an article?

    1. Map the data to the NewsPilot Article format. Text sections should not
    contain any html tags, 

    however it is possible to add links using the markdown format
    `[NewsPilot](https://pilot.ebu.io)`

    2. Obtain an auth token using methods described above.

    3. `PUSH` it to `/api/articles/`.


    If the article was created properly you will receive `201` response with the
    newly 

    created versioned article. 

    If the article with given organisation/id combination was already present in
    our system,

    the response will be `204`. 


    ##### How to update an article?

    1. Map the data to the NewsPilot ArticleUpdate format.

    2. Obtain an auth token using methods described above.

    3. Send a `PUT` request to `/api/articles/<organisation>/<article_id>/`.


    If the article was created properly you will receive `200` response with the
    updated article. 

    The old version will not be removed. 


    ##### Data mapping tips

    - Media formats that we support are `.mp3`, `.mp4`, `.m3u8`.

    - Media subtitle formats we support are `.srt`. There is no requirement to
    add subtitles as those are generated
     automatically when media is processed by EuroVox system. 
    - Media duration should be in seconds. If you don't have the information
    about media duration we will calculate
     that automatically on first download. 
    - Make sure that your media files are not geoblocked and available to our
    workers, 

    as we need to download them once for proper operation. 

    - If you need to add any embeds in a form of an iframe use VerbatimSection. 

    If you do, the whole embed, including the `<iframe>` tags should be added
    to 

    the section's `content` property. 

    - Don't use verbatim sections to format text sections. 

    - Regular media should not be added in VerbatimSection as it makes it
    impossible 

    to translate and clear rights. 
  version: v1.150.79
  x-logo:
    url: 'https://ebu.io/static/images/static/ebu-tagline-black.png'
paths:
  /api/oauth/access_token:
    get:
      tags:
        - Auth
      summary: Get Access Token
      description: >-
        Get the authentication jwt token to use in other API endpoints. The
        token is valid for 1 hour.

        After you obtain the token you can provide it using 'Authorization:
        Bearer {token}' header.

        The endpoint requires client_id and client_secret. Those are generated
        per organisation.

        If your administrator does not have your organisation's client
        credentials,

        please contact us using slack or by email noir@ebu.ch


        - **client_id** - your organisation's credentials

        - **client_secret** - your organisation's credentials
      operationId: get_access_token_api_oauth_access_token_get
      parameters:
        - required: true
          schema:
            title: Client Id
            type: string
          name: client_id
          in: query
        - required: true
          schema:
            title: Client Secret
            type: string
          name: client_secret
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/oauth/refresh_token:
    get:
      tags:
        - Auth
      summary: Get Refresh Token
      description: >-
        You can use this endpoint to refresh your session by using the refresh
        token.

        It is not mandatory, you can simply request a new token every time you
        need to.


        - **client_id** - your organisation's credentials

        - **client_secret** - your organisation's credentials

        - **refresh_token** - refresh token you obtained while getting the
        access token
      operationId: get_refresh_token_api_oauth_refresh_token_get
      parameters:
        - required: true
          schema:
            title: Client Id
            type: string
          name: client_id
          in: query
        - required: true
          schema:
            title: Client Secret
            type: string
          name: client_secret
          in: query
        - required: true
          schema:
            title: Refresh Token
            type: string
          name: refresh_token
          in: query
        - required: true
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/oauth/verify_token:
    get:
      tags:
        - Auth
      summary: Verify Token
      description: |-
        Verify the correctness of your token and auth scheme.
        The token should be passed using 'Authorization: Bearer {token}' header.
      operationId: verify_token_api_oauth_verify_token_get
      parameters:
        - required: true
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/:
    get:
      tags:
        - Articles
      summary: Search Articles
      description: Get list of minimized articles according to filters
      operationId: search_articles_api_articles__get
      parameters:
        - required: false
          schema:
            title: Query
            type: string
          name: query
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/QueryOperatorEnum'
            default: OR
          name: query_operator
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/TextSearchEnum'
            default: sections_transcripts
          name: search_text
          in: query
        - required: false
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LanguageEnum'
            default: en
          name: language
          in: query
        - required: false
          schema:
            title: Page
            type: integer
            default: 0
          name: page
          in: query
        - required: false
          schema:
            title: Articles Per Page
            type: integer
            default: 10
          name: articles_per_page
          in: query
        - required: false
          schema:
            title: From Now
            type: string
          name: from_now
          in: query
        - required: false
          schema:
            title: From Date
            type: string
            format: date-time
          name: from_date
          in: query
        - required: false
          schema:
            title: To Date
            type: string
            format: date-time
          name: to_date
          in: query
        - required: false
          schema:
            title: Media Duration From
            type: integer
          name: media_duration_from
          in: query
        - required: false
          schema:
            title: Media Duration To
            type: integer
          name: media_duration_to
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/MediaFilterEnum'
          name: media
          in: query
        - required: false
          schema:
            title: Public Service Algorithm
            pattern: >-
              (?:cross_border_relevance|forward_looking|diverse_voices|analysis_explanation)\_?\=?(?:lte|gte|gt|lt)?\=(?:[0-5]|null)
            type: array
            items:
              pattern: >-
                (?:cross_border_relevance|forward_looking|diverse_voices|analysis_explanation)\_?\=?(?:lte|gte|gt|lt)?\=(?:[0-5]|null)
              type: string
            default: []
          name: public_service_algorithm
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/QueryOperatorEnum'
            default: AND
          name: public_service_algorithm_operator
          in: query
        - required: false
          schema:
            title: Category
            type: string
            default: ''
          name: category
          in: query
        - required: false
          schema:
            title: Topics
            type: string
          name: topics
          in: query
        - required: false
          schema:
            title: Rights Clearance
            type: string
          name: rights_clearance
          in: query
        - required: false
          schema:
            title: Contains Editorial Requests
            type: boolean
          name: contains_editorial_requests
          in: query
        - required: false
          schema:
            title: Editorial Selection
            type: string
          name: editorial_selection
          in: query
        - required: false
          schema:
            title: Favourite List
            type: string
          name: favourite_list
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortingEnum'
            default: publication_date
          name: sort_by
          in: query
        - required: false
          schema:
            title: Bucket By Publication Date
            type: boolean
            default: false
          name: bucket_by_publication_date
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/BucketByPublicationDateIntervalEnum'
            default: week
          name: bucket_by_publication_date_interval
          in: query
        - required: false
          schema:
            title: Bucket By Organisation
            type: boolean
            default: false
          name: bucket_by_organisation
          in: query
        - required: false
          schema:
            title: Bucket By Topics
            type: boolean
            default: false
          name: bucket_by_topics
          in: query
        - required: false
          schema:
            title: Published Only
            type: boolean
            default: false
          name: published_only
          in: query
        - required: false
          schema:
            title: Series
            type: string
          name: series
          in: query
        - required: false
          schema:
            title: Constructive
            type: boolean
          name: constructive
          in: query
        - required: false
          schema:
            title: Is Checked
            type: boolean
          name: is_checked
          in: query
        - required: false
          schema:
            title: Is Contribution
            type: boolean
            default: false
          name: is_contribution
          in: query
        - required: false
          schema:
            title: Cache
            type: boolean
            default: true
          name: cache
          in: query
        - required: false
          schema:
            title: Semantic
            type: boolean
            default: false
          name: semantic
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  current_date:
                    title: Current Date
                    type: string
                    example: '2020-07-30T12:53:31.219177'
                  total_items:
                    title: Total Items
                    type: int
                    example: 2
                  total_pages:
                    title: Total Pages
                    type: int
                    example: 1
                  items:
                    title: Items
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 3-11479039
                        title:
                          type: string
                          example: Article title
                        lead:
                          type: string
                          example: Article lead first sentence...
                        thumbnail:
                          type: string
                          example: 'https://img2.rtve.es/css/generica_rtve.jpg'
                        organisation:
                          type: string
                          example: Yle
                        publication_date:
                          type: string
                          example: '2020-08-04T12:53:30+00:00'
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                properties:
                  detail:
                    title: You provided wrong token.
                    type: string
                    example: You provided wrong token.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - bearerAuth: []
    post:
      tags:
        - Articles
      summary: Create Article
      description: >-
        Create a new article. If an article with the id/organisation combo
        already exists -
         204 No Content will be returned.

        - **article** - Mapped article data
      operationId: create_article_api_articles__post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleCreate'
            example:
              id: SDFFSSPD123
              organisation: EBU
              original_language: en
              url: 'https://www.test.com/articles/test_article/'
              thumbnail: 'https://www.test.com/test.jpg'
              categories:
                - world
              tags:
                - test
                - article
                - news
              author: Pawel Glimos
              publication_date: '2021-01-16T10:02:05.890000+00:00'
              modification_date: '2021-01-16T13:53:40.487000+00:00'
              expiration_date: '2022-01-16T13:53:40.487000+00:00'
              sections:
                - type: title
                  text: This is a title
                - type: image
                  url: 'https://www.test.com/test.jpg'
                  alt: ''
                  caption: This is the main image.
                  source: EBU
                - type: lead
                  text: >-
                    This is a lead text. It will show in the list of articles
                    and under the main image
                - type: header
                  level: 2
                  text: This is a header of a section
                - type: text
                  text: This is the body of the section. No formatting is allowed
                - type: text
                  text: Every text section is treated as a separate paragraph
                - type: header
                  level: 2
                  text: This is a header of another section
                - type: media
                  id: '7723856'
                  media_type: video
                  url: >-
                    https://news-pilot-videos.s3-eu-west-1.amazonaws.com/production/sv/test.mp4
                  thumbnail: >-
                    https://news-pilot-images.s3-eu-west-1.amazonaws.com/production/sv/test.jpg
                  original_language: en
                  aspect_ratio: 1.77
                  author: Pawel Glimos
                  publication_date: '2021-02-19T15:04:00+00:00'
                  duration: 120
                - type: youtube
                  video_id: OxZs4-cCcw4
                  title: >-
                    Giant Sulking Dog Hates Bath Time Throws Tantrum And Does
                    Everything To Avoid It!
                - type: twitter
                  tweet_id: '1324060283103518721'
                - type: verbatim
                  content: >-
                    <iframe src='demo_iframe.htm' height='200' width='300'
                    title='Iframe Example'></iframe>
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - bearerAuth: []
  '/api/articles/{organisation}/{article_id}':
    get:
      tags:
        - Articles
      summary: Get Article
      description: Get a single versioned article with all versions.
      operationId: get_article_api_articles__organisation___article_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Language
            type: string
          name: language
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - bearerAuth: []
    put:
      tags:
        - Articles
      summary: Update Article
      description: |-
        Update an article. If the request is properly processed a new original
        version will be created, with the previous versions unaffected

        - **article_update** - Mapped article update data
      operationId: update_article_api_articles__organisation___article_id__put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleUpdate'
            example:
              url: 'https://www.test.com/articles/b99/'
              categories:
                - sports
              tags:
                - basketball
                - article
                - sports
              author: Jake Peralta
              publication_date: '2022-01-16T10:02:05.890000+00:00'
              modification_date: '2022-01-16T13:53:40.487000+00:00'
              expiration_date: '2023-01-16T13:53:40.487000+00:00'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Articles
      summary: Delete Article
      description: >-
        Withdraw article from the news pilot. Do not treat it as just pressing
        the delete button.

        Should be used only as the last resort. There is no way back.

        The edit log and the article are saved for legal reasons.
      operationId: delete_article_api_articles__organisation___article_id__delete
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalReason'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - bearerAuth: []
  '/api/articles/{organisation}/{article_id}/editorial_request':
    put:
      tags:
        - Articles
      summary: Editorial Request
      operationId: >-
        editorial_request_api_articles__organisation___article_id__editorial_request_put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Articles
      summary: Editorial Request Delete
      operationId: >-
        editorial_request_delete_api_articles__organisation___article_id__editorial_request_delete
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/related/:
    get:
      tags:
        - Articles
      summary: Related Articles
      operationId: related_articles_api_articles_related__get
      parameters:
        - required: false
          schema:
            title: Query
            type: string
          name: query
          in: query
        - required: false
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            title: Size
            type: integer
            default: 20
          name: size
          in: query
        - required: false
          schema:
            title: Model
            enum:
              - use_large
              - labse
            type: string
            default: labse
          name: model
          in: query
        - required: false
          schema:
            title: Score Threshold
            type: integer
            default: 25
          name: score_threshold
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Related Articles Api Articles Related  Get
                type: array
                items:
                  $ref: '#/components/schemas/SimplifiedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/ask-gpt/:
    post:
      tags:
        - Articles
      summary: Ask Gpt Using Articles
      operationId: ask_gpt_using_articles_api_articles_ask_gpt__post
      parameters:
        - required: false
          schema:
            title: Debug
            type: boolean
            default: false
          name: debug
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatGPTQuery'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GptResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/user_related/:
    get:
      tags:
        - Articles
      summary: User Related Articles
      operationId: user_related_articles_api_articles_user_related__get
      parameters:
        - required: false
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            title: Size
            type: integer
            default: 20
          name: size
          in: query
        - required: false
          schema:
            title: Model
            enum:
              - use_large
              - labse
            type: string
            default: use_large
          name: model
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response User Related Articles Api Articles User Related  Get
                type: array
                items:
                  $ref: '#/components/schemas/SimplifiedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/user_history/:
    get:
      tags:
        - Articles
      summary: User History
      operationId: user_history_api_articles_user_history__get
      parameters:
        - required: false
          schema:
            title: Before Timestamp
            type: integer
          name: before_timestamp
          in: query
        - required: false
          schema:
            title: Size
            type: integer
            default: 10
          name: size
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response User History Api Articles User History  Get
                type: array
                items:
                  $ref: '#/components/schemas/SimplifiedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/collaborative/:
    get:
      tags:
        - Articles
      summary: User Collaborative Articles
      operationId: user_collaborative_articles_api_articles_collaborative__get
      parameters:
        - required: false
          schema:
            title: Size
            type: integer
            default: 20
          name: size
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: >-
                  Response User Collaborative Articles Api Articles
                  Collaborative  Get
                type: array
                items:
                  $ref: '#/components/schemas/SimplifiedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles_widget/:
    get:
      tags:
        - Articles
      summary: Search Widget
      operationId: search_widget_api_articles_widget__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Search Widget Api Articles Widget  Get
                type: array
                items:
                  $ref: '#/components/schemas/WidgetArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/psa:
    get:
      tags:
        - Articles
      summary: Get Psa
      operationId: get_psa_api_articles_psa_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Psa Api Articles Psa Get
                type: array
                items:
                  $ref: '#/components/schemas/PSACriterion'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/articles/eurovox_jobs/{organisation}/{article_id}':
    get:
      tags:
        - Articles
      summary: List Eurovox Job
      operationId: >-
        list_eurovox_job_api_articles_eurovox_jobs__organisation___article_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: >-
                  Response List Eurovox Job Api Articles Eurovox Jobs 
                  Organisation   Article Id  Get
                type: array
                items:
                  $ref: '#/components/schemas/TrackedEurovoxJob'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/articles/eurovox_jobs/{organisation}/{article_id}/{job_id}':
    delete:
      tags:
        - Articles
      summary: Delete Eurovox Job
      operationId: >-
        delete_eurovox_job_api_articles_eurovox_jobs__organisation___article_id___job_id__delete
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Job Id
            type: string
          name: job_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/articles/{organisation}/{article_id}/{version_id}':
    get:
      tags:
        - Articles
      summary: Get Article Render
      description: >-
        Render a specific article version. It respects all the copyright rules.

        The article will not be rendered if all the copyright cleared media does
        not

        have a distribution url


        UNPROTECTED whitelisted cdn route
      operationId: >-
        get_article_render_api_articles__organisation___article_id___version_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: true
          schema:
            title: Box Id
            type: string
          name: box_id
          in: query
        - required: false
          schema:
            title: Get Warnings
            type: boolean
            default: false
          name: get_warnings
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleRender'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/clearance/{organisation}/{article_id}/{version_id}':
    put:
      tags:
        - Articles
      summary: Update Clearence Rights
      description: >-
        Update text or media rights clearance. More than one update can be
        performed at a time,

        but they need to target the same version.
      operationId: >-
        update_clearence_rights_api_clearance__organisation___article_id___version_id__put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Updates
              type: array
              items:
                $ref: '#/components/schemas/RightsUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/check/{organisation}/{article_id}/{version_id}':
    put:
      tags:
        - Articles
      summary: Toggle Check Article
      operationId: >-
        toggle_check_article_api_check__organisation___article_id___version_id__put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckedUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/translations/{organisation}/{article_id}/{version_id}/{language}':
    get:
      tags:
        - Articles
      summary: Translation On Demand
      description: Request an on demand text translation.
      operationId: >-
        translation_on_demand_api_translations__organisation___article_id___version_id___language__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: true
          schema:
            title: Language
            type: string
          name: language
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/languages:
    get:
      tags:
        - Articles
      summary: Get Languages
      description: >-
        Unified endpoint returning all supported languages.

        Also indicates usage of language:

        is_filter - can language used in feed as a filter

        is_source - can language be used as a source for media

        is_translation_target - either article/media can be translated into
        given language
      operationId: get_languages_api_languages_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Languages Api Languages Get
                type: array
                items:
                  $ref: '#/components/schemas/SupportedLanguage'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/media/translations/{organisation}/{article_id}/{version_id}/{language}':
    get:
      tags:
        - Articles
      summary: Get Media Translation
      description: Request translation of media.
      operationId: >-
        get_media_translation_api_media_translations__organisation___article_id___version_id___language__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: true
          schema:
            title: Language
            type: string
          name: language
          in: path
        - required: true
          schema:
            title: Pos
            type: integer
          name: pos
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/media/translations/{organisation}/{article_id}/{version_id}/':
    put:
      tags:
        - Articles
      summary: Put Media Translation
      description: >-
        Endpoint used for cloning a eurovox job and allow user to edit a
        translation.
      operationId: >-
        put_media_translation_api_media_translations__organisation___article_id___version_id___put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaTranslationPut'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/media/streaming/{organisation}/{article_id}/{version_id}':
    get:
      tags:
        - Articles
      summary: Request Hls Processing
      description: >-
        Request media transcoding for distribution. It is triggered
        automatically when an article

        is added to a recommendation box.

        On request all media in the article version will be sent to transcoding
        service.

        The process is run asynchronously and requesting user is notified on
        completion.
      operationId: >-
        request_hls_processing_api_media_streaming__organisation___article_id___version_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  '/api/media/transcription/{organisation}/{article_id}/{version_id}':
    get:
      tags:
        - Articles
      summary: Request Media Transcription
      operationId: >-
        request_media_transcription_api_media_transcription__organisation___article_id___version_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: true
          schema:
            title: Pos
            type: integer
          name: pos
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  '/api/media/language/{organisation}/{article_id}/{version_id}':
    put:
      tags:
        - Articles
      summary: Edit Media Language
      description: >-
        Edit language of a media in a case where it is wrongly attributed as
        being

        the same as the language of the article. It is only possible to edit
        media language

        of the conent you own, unless you are a superadmin.

        It is not possible to edit media language if there is a human verified
        version of the media

        WARNING! This removes all existing media translations and triggers a new
        translation workflow
      operationId: >-
        edit_media_language_api_media_language__organisation___article_id___version_id__put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: true
          schema:
            title: Pos
            type: integer
          name: pos
          in: query
        - required: true
          schema:
            $ref: '#/components/schemas/SourceLanguagesEnum'
          name: language
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/categories/:
    get:
      tags:
        - Articles
      summary: Get Category List
      description: >-
        Get a list of categories available on the platform. If an article uses
        anything

        else as a category it will be mapped to one of the categories in the
        list.
      operationId: get_category_list_api_categories__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/media/resize_url/:
    get:
      tags:
        - Articles
      summary: Resize Image Url
      description: |-
        Resize an image in given url to given width and height.
        Returns an image file
      operationId: resize_image_url_api_media_resize_url__get
      parameters:
        - required: true
          schema:
            title: Url
            type: string
          name: url
          in: query
        - required: true
          schema:
            title: Width
            type: integer
          name: width
          in: query
        - required: true
          schema:
            title: Height
            type: integer
          name: height
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/media/upload_image/:
    post:
      tags:
        - Articles
      summary: Upload Image
      description: |-
        Resize an image in given url to given width and height.
        Returns an image file
      operationId: upload_image_api_media_upload_image__post
      parameters:
        - required: false
          schema:
            title: Chat
            type: boolean
            default: false
          name: chat
          in: query
        - required: true
          schema:
            title: Content-Length
            exclusiveMaximum: 15000000
            type: integer
          name: content-length
          in: header
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/Body_upload_image_api_media_upload_image__post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/media/resize/{organisation}/{article_id}/':
    get:
      tags:
        - Articles
      summary: Resize Image Data Model
      description: >-
        Resize an image from organisation/article_id to given width and height

        if version_id, pos are not provided, latest original version's thumbnail
        will be resized

        This does not take rights clearance into account

        Returns an image file


        UNPROTECTED
      operationId: >-
        resize_image_data_model_api_media_resize__organisation___article_id___get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Width
            type: integer
            default: 500
          name: width
          in: query
        - required: false
          schema:
            title: Height
            type: integer
            default: 280
          name: height
          in: query
        - required: false
          schema:
            title: Version Id
            type: string
          name: version_id
          in: query
        - required: false
          schema:
            title: Pos
            type: integer
          name: pos
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/drafts:
    get:
      tags:
        - Articles
      summary: Get Drafts
      operationId: get_drafts_api_drafts_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Drafts Api Drafts Get
                type: array
                items:
                  $ref: '#/components/schemas/SimplifiedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Articles
      summary: Create Draft
      operationId: create_draft_api_drafts_post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDraftBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/drafts/{draft_uuid}':
    get:
      tags:
        - Articles
      summary: Get Draft
      operationId: get_draft_api_drafts__draft_uuid__get
      parameters:
        - required: true
          schema:
            title: Draft Uuid
            type: string
          name: draft_uuid
          in: path
        - required: false
          schema:
            title: Position
            type: integer
          name: position
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Articles
      summary: Put Draft
      operationId: put_draft_api_drafts__draft_uuid__put
      parameters:
        - required: true
          schema:
            title: Draft Uuid
            type: string
          name: draft_uuid
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDraftBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Articles
      summary: Remove Draft
      operationId: remove_draft_api_drafts__draft_uuid__delete
      parameters:
        - required: true
          schema:
            title: Draft Uuid
            type: string
          name: draft_uuid
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/drafts/{draft_uuid}/publish':
    put:
      tags:
        - Articles
      summary: Undraft
      operationId: undraft_api_drafts__draft_uuid__publish_put
      parameters:
        - required: true
          schema:
            title: Draft Uuid
            type: string
          name: draft_uuid
          in: path
        - required: false
          schema:
            title: Force
            type: boolean
            default: false
          name: force
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/drafts/files/{draft_uuid}':
    post:
      tags:
        - Articles
      summary: Upload File
      operationId: upload_file_api_drafts_files__draft_uuid__post
      parameters:
        - required: true
          schema:
            title: Draft Uuid
            type: string
          name: draft_uuid
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/Body_upload_file_api_drafts_files__draft_uuid__post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/psa/{organisation}/{article_id}':
    get:
      tags:
        - Articles
      summary: Get Article Psa
      operationId: get_article_psa_api_psa__organisation___article_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Process
            type: boolean
            default: false
          name: process
          in: query
        - required: false
          schema:
            title: Prompt Id
            type: string
            default: basic_psa
          name: prompt_id
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Articles
      summary: Insert Article Psa
      operationId: insert_article_psa_api_psa__organisation___article_id__put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PSAValueInsert'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/media/translations/{organisation}/{article_id}/{version_id}/status/':
    get:
      tags:
        - Articles
      summary: Get Translation Status
      operationId: >-
        get_translation_status_api_media_translations__organisation___article_id___version_id__status__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: true
          schema:
            title: Pos
            type: integer
          name: pos
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/gpt_prompts/:
    get:
      tags:
        - Articles
      summary: Get Gpt Prompts
      operationId: get_gpt_prompts_api_gpt_prompts__get
      parameters:
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/PromptType'
            default: psa
          name: prompt_type
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/resizer:
    get:
      tags:
        - Articles
      summary: Resize Proxy
      operationId: resize_proxy_api_resizer_get
      parameters:
        - required: true
          schema:
            title: Url
            type: string
          name: url
          in: query
        - required: false
          schema:
            title: Width
            type: integer
            default: 400
          name: width
          in: query
        - required: false
          schema:
            title: Height
            type: integer
            default: 225
          name: height
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/media/downloading/error/{organisation}/{article_id}/{version_id}':
    post:
      tags:
        - Articles
      summary: Set Media Error Status
      operationId: >-
        set_media_error_status_api_media_downloading_error__organisation___article_id___version_id__post
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Body_set_media_error_status_api_media_downloading_error__organisation___article_id___version_id__post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /api/series/:
    get:
      tags:
        - Series
      summary: Get Series List
      operationId: get_series_list_api_series__get
      parameters:
        - required: false
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            title: Query
            type: string
          name: query
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/QueryOperatorEnum'
            default: OR
          name: query_operator
          in: query
        - required: false
          schema:
            title: Page
            type: integer
            default: 0
          name: page
          in: query
        - required: false
          schema:
            title: Articles Per Page
            type: integer
            default: 10
          name: articles_per_page
          in: query
        - required: false
          schema:
            title: Language
            type: string
            default: en
          name: language
          in: query
        - required: false
          schema:
            title: Media Only
            type: boolean
            default: true
          name: media_only
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSeriesList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Series
      summary: Create Series
      operationId: create_series_api_series__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeriesUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  '/api/series/{series_id}':
    get:
      tags:
        - Series
      summary: Get Single Series
      operationId: get_single_series_api_series__series_id__get
      parameters:
        - required: true
          schema:
            title: Series Id
            type: string
          name: series_id
          in: path
        - required: false
          schema:
            title: Language
            type: string
            default: en
          name: language
          in: query
        - required: false
          schema:
            title: Media Only
            type: boolean
            default: true
          name: media_only
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Series
      summary: Update Series
      operationId: update_series_api_series__series_id__put
      parameters:
        - required: true
          schema:
            title: Series Id
            type: string
          name: series_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeriesUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/recommendations/:
    get:
      tags:
        - Recommendations
      summary: Get Org Reco Boxes
      description: >-
        Get all recommendation boxes for an organisation or an user within the
        organisation.


        - **user_id**: optional - you can specify a keycloak user id to get just
        the

        recommendation boxes created by this user

        - **organisations**: optional - comma-separated list of organisations

        - **deleted**: optional - if true will look for deleted recoboxes
        instead - superadmin only
      operationId: get_org_reco_boxes_api_recommendations__get
      parameters:
        - required: false
          schema:
            title: Organisations
            type: string
          name: organisations
          in: query
        - required: false
          schema:
            title: Deleted
            type: boolean
            default: false
          name: deleted
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Org Reco Boxes Api Recommendations  Get
                type: array
                items:
                  $ref: '#/components/schemas/RecoBoxListItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Recommendations
      summary: Post Reco Box
      description: >-
        Create a new recommendation box.


        If the name of the box is not set it will be automatically set to
        'RecoBox + uuid'

        - **data**: dictionary with recommendation box data
      operationId: post_reco_box_api_recommendations__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoBoxUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoBoxListItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/recommendations/overview/:
    get:
      tags:
        - Recommendations
      summary: Get Reco Box Overview
      description: Get all recommendation boxes for the overview page.
      operationId: get_reco_box_overview_api_recommendations_overview__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: >-
                  Response Get Reco Box Overview Api Recommendations Overview 
                  Get
                type: array
                items:
                  $ref: '#/components/schemas/RecoBoxOverviewItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/recommendations/editorial/:
    get:
      tags:
        - Recommendations
      summary: Get All Editorial Selections
      description: Get the list of all boxes marked as editorial selections
      operationId: get_all_editorial_selections_api_recommendations_editorial__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: >-
                  Response Get All Editorial Selections Api Recommendations
                  Editorial  Get
                type: array
                items:
                  $ref: '#/components/schemas/EditorialSelectionListItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/recommendations/editorial/{recommendation_id}/':
    get:
      tags:
        - Recommendations
      summary: Get Editorial Selection
      description: Get a single recommendation box marked as editorial selection
      operationId: >-
        get_editorial_selection_api_recommendations_editorial__recommendation_id___get
      parameters:
        - required: true
          schema:
            title: Recommendation Id
            type: string
          name: recommendation_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoBoxRender'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/recommendations/editorial/{uuid}':
    post:
      tags:
        - Recommendations
      summary: Add To Editorial Selection
      description: Add an item to editorial selections
      operationId: add_to_editorial_selection_api_recommendations_editorial__uuid__post
      parameters:
        - required: true
          schema:
            title: Uuid
            type: string
          name: uuid
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoItem'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoBox'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Recommendations
      summary: Remove From Editorial Selection
      description: Add an item to editorial selections
      operationId: >-
        remove_from_editorial_selection_api_recommendations_editorial__uuid__delete
      parameters:
        - required: true
          schema:
            title: Uuid
            type: string
          name: uuid
          in: path
        - required: true
          schema:
            title: Item Id
            type: string
          name: item_id
          in: query
        - required: true
          schema:
            title: Item Org
            type: string
          name: item_org
          in: query
        - required: false
          schema:
            title: Item Version
            type: string
          name: item_version
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoBox'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/recommendations/themes/:
    get:
      tags:
        - Recommendations
      summary: Get Reco Themes
      description: Get all available recommendation box colour schemes
      operationId: get_reco_themes_api_recommendations_themes__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Reco Themes Api Recommendations Themes  Get
                type: array
                items:
                  type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/recommendations/{recommendation_id}/':
    get:
      tags:
        - Recommendations
      summary: Get Reco Box
      description: >-
        Get a specific recommendation box by its uuid.


        You can only get a recommendation box from an organisation you belong
        to, unless

        you are a superadmin

        - **recommendation_id**: uuid of the RecoBox
      operationId: get_reco_box_api_recommendations__recommendation_id___get
      parameters:
        - required: true
          schema:
            title: Recommendation Id
            type: string
          name: recommendation_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoBoxRender'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Recommendations
      summary: Put Reco Box
      description: >-
        Update a recommendation box.


        You can only update a recommendation box from an organisation you belong
        to, unless you

        are a superadmin

        - **recommendation_id**: uuid of the RecoBox

        - **data**: dictionary with updates to perform. If an attribute is not
        filled it will

        not be edited
      operationId: put_reco_box_api_recommendations__recommendation_id___put
      parameters:
        - required: true
          schema:
            title: Recommendation Id
            type: string
          name: recommendation_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoBoxUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoBoxRender'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Recommendations
      summary: Delete Reco Box
      description: >-
        Delete a recommendation box.


        You can only delete a recommendation box from an organisation you belong
        to, unless you

        are a superadmin

        - **recommendation_id**: uuid of the RecoBox
      operationId: delete_reco_box_api_recommendations__recommendation_id___delete
      parameters:
        - required: true
          schema:
            title: Recommendation Id
          name: recommendation_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/recommendations/render/{recommendation_id}/':
    get:
      tags:
        - Recommendations
      summary: Get Render Reco Box
      description: |-
        Render a recommendation box by its uuid.
        Render is a form of the box that is visible to the end user.
        It takes into account all the publication and copyright rules.

        UNPROTECTED whitelisted cdn route

        You can only get a recommendation box from an organisation you belong to
        - **recommendation_id**: uuid of the RecoBox
      operationId: get_render_reco_box_api_recommendations_render__recommendation_id___get
      parameters:
        - required: true
          schema:
            title: Recommendation Id
            type: string
          name: recommendation_id
          in: path
        - required: false
          schema:
            title: Article Id
            type: string
          name: article_id
          in: query
        - required: false
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            title: Prev Organisation
            type: string
          name: prev_organisation
          in: query
        - required: false
          schema:
            title: Prev Article
            type: string
          name: prev_article
          in: query
        - required: false
          schema:
            title: Prev Version
            type: string
          name: prev_version
          in: query
        - required: false
          schema:
            title: Erb
            type: string
          name: erb
          in: query
        - required: false
          schema:
            title: Nocache
            type: boolean
            default: false
          name: nocache
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/recommendations/{recommendation_id}/retitle':
    put:
      tags:
        - Recommendations
      summary: Put Reco Box Update Title
      operationId: >-
        put_reco_box_update_title_api_recommendations__recommendation_id__retitle_put
      parameters:
        - required: true
          schema:
            title: Recommendation Id
            type: string
          name: recommendation_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecoBoxRetitle'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetitleResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/recommendations/stats:
    get:
      tags:
        - Recommendations
      summary: Reco Box Stats
      description: Get stats for RecoBoxes with given recommendation ids
      operationId: reco_box_stats_api_recommendations_stats_get
      parameters:
        - required: true
          schema:
            title: Recommendation Ids
            type: string
          name: recommendation_ids
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/share:
    get:
      tags:
        - Recommendations
      summary: Share Social Media
      operationId: share_social_media_api_share_get
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /api/short/:
    post:
      tags:
        - Recommendations
      summary: Create Short Shared Link
      operationId: create_short_shared_link_api_short__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedShortLink'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedShortLink'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/notifications/:
    get:
      tags:
        - Notifications
      summary: Get Notifications
      operationId: get_notifications_api_notifications__get
      parameters:
        - required: false
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotifications'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Notifications
      summary: Create Notification
      operationId: create_notification_api_notifications__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationIn'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/media/notifications/:
    post:
      tags:
        - Notifications
      summary: Create Media Notification
      operationId: create_media_notification_api_media_notifications__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationMediaIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /api/push/send/:
    post:
      tags:
        - Notifications
      summary: Send Push
      operationId: send_push_api_push_send__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushNotificationBody'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/push/subscription/:
    get:
      tags:
        - Notifications
      summary: Get User Preferences
      operationId: get_user_preferences_api_push_subscription__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Notifications
      summary: Update Subscription Preferences
      operationId: update_subscription_preferences_api_push_subscription__put
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushSubscriptionOptions'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Notifications
      summary: Save Sub
      operationId: save_sub_api_push_subscription__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushSubscriptionCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/users/:
    get:
      tags:
        - Manager
      summary: Get Codops Users
      description: '**Get a list of users with current user''s or matching codops**'
      operationId: get_codops_users_api_users__get
      parameters:
        - required: false
          schema:
            title: Q
            type: string
          name: q
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Codops Users Api Users  Get
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/users/{user_id}':
    get:
      tags:
        - Manager
      summary: Get User
      description: '**Get info about the user with given user_id**'
      operationId: get_user_api_users__user_id__get
      parameters:
        - required: true
          schema:
            title: User Id
            type: string
          name: user_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Manager
      summary: Update User
      description: |-
        **Update an user with given user_id**

        Send only the fields that you want to update
      operationId: update_user_api_users__user_id__put
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/groups/:
    get:
      tags:
        - Manager
      summary: Get Available Groups
      description: '**Get a list of available groups**'
      operationId: get_available_groups_api_groups__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Available Groups Api Groups  Get
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/admins/:
    get:
      tags:
        - Manager
      summary: Get My Admin
      description: '**Get a list of admins for my organisation**'
      operationId: get_my_admin_api_admins__get
      parameters:
        - required: false
          schema:
            title: Codops
            type: string
          name: codops
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get My Admin Api Admins  Get
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/terms/:
    put:
      tags:
        - Manager
      summary: Accept Terms Of Service
      description: '**Set Terms of service attribute**'
      operationId: accept_terms_of_service_api_terms__put
      parameters:
        - required: true
          schema:
            title: Version
            type: integer
          name: version
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/generate-pdf/:
    post:
      tags:
        - Manager
      summary: Generate Pdf
      description: |-
        **Generate pdf from posted html or url**

        It does this by calling Gotenberg service:
        https://gotenberg.dev/docs/modules/chromium
      operationId: generate_pdf_api_generate_pdf__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PdfInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/matrix/:
    get:
      tags:
        - Manager
      summary: Get Matrix
      description: '**Get the full organisations matrix**'
      operationId: get_matrix_api_matrix__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Matrix Api Matrix  Get
                type: array
                items:
                  $ref: '#/components/schemas/Organisation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Manager
      summary: Create New Organisation
      operationId: create_new_organisation_api_matrix__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/matrix/{organisation_id}':
    put:
      tags:
        - Manager
      summary: Update Matrix
      operationId: update_matrix_api_matrix__organisation_id__put
      parameters:
        - required: true
          schema:
            title: Organisation Id
            type: string
          name: organisation_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/media/webhook:
    post:
      tags:
        - webhooks
      summary: Webhook
      operationId: webhook_api_media_webhook_post
      parameters:
        - required: true
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookBody'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/top:
    get:
      tags:
        - Analytics
      summary: Get Ranked
      operationId: get_ranked_api_articles_top_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Ranked Api Articles Top Get
                type: array
                items:
                  $ref: '#/components/schemas/SimplifiedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/articles/statistics:
    get:
      tags:
        - Analytics
      summary: Articles Statistics
      operationId: articles_statistics_api_articles_statistics_get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/StatisticsRangeEnum'
            default: 7d
          name: last
          in: query
        - required: false
          schema:
            title: I Know What I Am Doing
            type: boolean
            default: false
          name: i_know_what_i_am_doing
          in: query
        - required: false
          schema:
            title: Start Date
            type: string
            format: date-time
          name: start_date
          in: query
        - required: false
          schema:
            title: End Date
            type: string
            format: date-time
          name: end_date
          in: query
        - required: false
          schema:
            title: Limit Publication Date
            type: boolean
            default: false
          name: limit_publication_date
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Articles Statistics Api Articles Statistics Get
                type: array
                items:
                  $ref: '#/components/schemas/SimplifiedArticleStats'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/clusters/settings:
    get:
      tags:
        - Analytics
      summary: Get Articles Cluster Settings
      operationId: get_articles_cluster_settings_api_clusters_settings_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
    post:
      tags:
        - Analytics
      summary: Post Articles Cluster Settings
      operationId: post_articles_cluster_settings_api_clusters_settings_post
      parameters:
        - required: false
          schema:
            title: Hours
            type: integer
            default: 48
          name: hours
          in: query
        - required: false
          schema:
            title: Epsilon
            type: number
            default: 0.2
          name: epsilon
          in: query
        - required: false
          schema:
            title: Min Samples
            type: integer
            default: 5
          name: min_samples
          in: query
        - required: false
          schema:
            title: Metric
            type: string
            default: cosine
          name: metric
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/clusters:
    get:
      tags:
        - Analytics
      summary: Get Articles Clusters
      operationId: get_articles_clusters_api_clusters_get
      parameters:
        - required: false
          schema:
            title: Skip Cache
            type: boolean
            default: false
          name: skip_cache
          in: query
        - required: false
          schema:
            title: Hours
            type: integer
          name: hours
          in: query
        - required: false
          schema:
            title: Epsilon
            type: number
          name: epsilon
          in: query
        - required: false
          schema:
            title: Min Samples
            type: integer
          name: min_samples
          in: query
        - required: false
          schema:
            title: Metric
            type: string
          name: metric
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/ClusterSortingEnum'
            default: recency
          name: sort_by
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Articles Clusters Api Clusters Get
                type: array
                items:
                  $ref: '#/components/schemas/ArticleCluster'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/clusters/{cluster_id}':
    get:
      tags:
        - Analytics
      summary: Get Articles Clusters Items
      operationId: get_articles_clusters_items_api_clusters__cluster_id__get
      parameters:
        - required: true
          schema:
            title: Cluster Id
            type: string
          name: cluster_id
          in: path
        - required: false
          schema:
            title: Skip Cache
            type: boolean
            default: false
          name: skip_cache
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: >-
                  Response Get Articles Clusters Items Api Clusters  Cluster Id 
                  Get
                type: array
                items:
                  $ref: '#/components/schemas/SimplifiedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/recobox/statistics:
    get:
      tags:
        - Analytics
      summary: Get Recobox Statistics
      operationId: get_recobox_statistics_api_recobox_statistics_get
      parameters:
        - required: true
          schema:
            title: Organisations
            type: string
          name: organisations
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/StatisticsRangeEnum'
            default: 24h
          name: last
          in: query
        - required: false
          schema:
            title: Start Date
            type: string
            format: date-time
          name: start_date
          in: query
        - required: false
          schema:
            title: End Date
            type: string
            format: date-time
          name: end_date
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Recobox Statistics Api Recobox Statistics Get
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/RecoBoxStats'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/recobox/locations:
    get:
      tags:
        - Analytics
      summary: Get Recobox Location
      operationId: get_recobox_location_api_recobox_locations_get
      parameters:
        - required: true
          schema:
            title: Organisations
            type: string
          name: organisations
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/StatisticsRangeEnum'
            default: 24h
          name: last
          in: query
        - required: false
          schema:
            title: Start Date
            type: string
            format: date-time
          name: start_date
          in: query
        - required: false
          schema:
            title: End Date
            type: string
            format: date-time
          name: end_date
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Recobox Location Api Recobox Locations Get
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/RecoBoxLocation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/topics/trending:
    get:
      tags:
        - Analytics
      summary: Topics Trending
      operationId: topics_trending_api_topics_trending_get
      parameters:
        - required: true
          schema:
            title: Organisations
            type: string
          name: organisations
          in: query
        - required: false
          schema:
            title: Tags
            type: string
            default: 'LOC,MISC,ORG,PER'
          name: tags
          in: query
        - required: false
          schema:
            title: Last
            type: integer
            default: 24
          name: last
          in: query
        - required: false
          schema:
            title: Size
            type: integer
            default: 50
          name: size
          in: query
        - required: false
          schema:
            title: Articles Per Topic
            type: integer
            default: 5
          name: articles_per_topic
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Topics Trending Api Topics Trending Get
                type: array
                items:
                  $ref: '#/components/schemas/TrendingTopic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/topics/patterns:
    get:
      tags:
        - Analytics
      summary: Topics Patterns
      operationId: topics_patterns_api_topics_patterns_get
      parameters:
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/PatternTopicModeEnum'
            default: frequency
          name: mode
          in: query
        - required: false
          schema:
            title: Size
            type: integer
            default: 5
          name: size
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Topics Patterns Api Topics Patterns Get
                type: array
                items:
                  $ref: '#/components/schemas/TopicPattern'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/topics/{organisation}/{article_id}/{version_id}':
    post:
      tags:
        - Analytics
      summary: Post Topics
      operationId: post_topics_api_topics__organisation___article_id___version_id__post
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicsBody'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  '/api/summary/{organisation}/{article_id}':
    get:
      tags:
        - Analytics
      summary: Get Summary
      operationId: get_summary_api_summary__organisation___article_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
    post:
      tags:
        - Analytics
      summary: Post Summary
      operationId: post_summary_api_summary__organisation___article_id__post
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Summary'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  '/api/constructive/{organisation}/{article_id}':
    post:
      tags:
        - Analytics
      summary: Post Constructive
      operationId: post_constructive_api_constructive__organisation___article_id__post
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstructiveBody'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /api/box_summary/:
    get:
      tags:
        - Analytics
      summary: Get Box Summary
      description: >-
        Returns Contributions and Publications data for the set amount of days
        and organisation

        based on the request codops
      operationId: get_box_summary_api_box_summary__get
      parameters:
        - required: false
          schema:
            title: Last
            type: integer
            default: 30
          name: last
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxSummaryData'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/data/{file_name}':
    get:
      tags:
        - Analytics
      summary: Get Dashboard Data
      operationId: get_dashboard_data_api_data__file_name__get
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/DashboardDataFileNamesEnum'
          name: file_name
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/user_stats/:
    get:
      tags:
        - Analytics
      summary: Get User Stats
      operationId: get_user_stats_api_user_stats__get
      parameters:
        - required: false
          schema:
            title: Export
            enum:
              - csv
              - xlsx
            type: string
            default: csv
          name: export
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/reports/per_contributor:
    get:
      tags:
        - Analytics
      summary: Data Per Contributor
      operationId: data_per_contributor_api_reports_per_contributor_get
      parameters:
        - required: false
          schema:
            title: From Date
            type: string
            format: date-time
          name: from_date
          in: query
        - required: false
          schema:
            title: To Date
            type: string
            format: date-time
          name: to_date
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/box_data/:
    get:
      tags:
        - Analytics
      summary: Get Box Data Info
      operationId: get_box_data_info_api_box_data__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - APIKeyHeader: []
  /api/newsdeck/:
    get:
      tags:
        - Newsdeck
      summary: Get Newsdeck Config
      description: >-
        Get the current user id newsdeck and if it does not exist, create a new
        one
      operationId: get_newsdeck_config_api_newsdeck__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsdeckConfigResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Newsdeck
      summary: Update Newsdeck Config
      description: Update top level newsdeck of current user id
      operationId: update_newsdeck_config_api_newsdeck__put
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsdeckConfig'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsdeckConfigResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/newsdeck/columns/:
    put:
      tags:
        - Newsdeck
      summary: Update Columns
      operationId: update_columns_api_newsdeck_columns__put
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Column Updates
              type: array
              items:
                $ref: '#/components/schemas/NewsdeckColumnUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Newsdeck
      summary: Create New Column
      description: Create a new column in the current user newsdeck
      operationId: create_new_column_api_newsdeck_columns__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsdeckColumnUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsdeckConfigResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/newsdeck/columns/{column_id}/':
    delete:
      tags:
        - Newsdeck
      summary: Delete Column
      operationId: delete_column_api_newsdeck_columns__column_id___delete
      parameters:
        - required: true
          schema:
            title: Column Id
            type: string
          name: column_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/favourites/:
    get:
      tags:
        - Favourites
      summary: List Favourites
      operationId: list_favourites_api_favourites__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Favourites
      summary: Create List
      operationId: create_list_api_favourites__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavouriteListCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/favourites/{uuid}':
    put:
      tags:
        - Favourites
      summary: Update List
      operationId: update_list_api_favourites__uuid__put
      parameters:
        - required: true
          schema:
            title: Uuid
            type: string
          name: uuid
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavouriteListUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Favourites
      summary: Delete List
      operationId: delete_list_api_favourites__uuid__delete
      parameters:
        - required: true
          schema:
            title: Uuid
            type: string
          name: uuid
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/banners/:
    get:
      tags:
        - Banners
      summary: Get Info Banners
      operationId: get_info_banners_api_banners__get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Banners
      summary: Create Info Banner
      operationId: create_info_banner_api_banners__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfoBanner'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/banners/{banner_id}':
    put:
      tags:
        - Banners
      summary: Update Info Banner
      operationId: update_info_banner_api_banners__banner_id__put
      parameters:
        - required: true
          schema:
            title: Banner Id
            type: string
          name: banner_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfoBanner'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/podcasts/:
    get:
      tags:
        - Podcasts
      summary: Get Podcasts
      description: |-
        Special Mongo version of the search endpoint created
        to fit the requirements of automotive os
      operationId: get_podcasts_api_podcasts__get
      parameters:
        - required: false
          schema:
            title: Query
            type: string
          name: query
          in: query
        - required: false
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            title: Language
            type: string
            default: en
          name: language
          in: query
        - required: false
          schema:
            title: Page
            type: integer
            default: 0
          name: page
          in: query
        - required: false
          schema:
            title: Articles Per Page
            type: integer
            default: 10
          name: articles_per_page
          in: query
        - required: false
          schema:
            title: From Now
            type: string
          name: from_now
          in: query
        - required: false
          schema:
            title: From Date
            type: string
            format: date-time
          name: from_date
          in: query
        - required: false
          schema:
            title: To Date
            type: string
            format: date-time
          name: to_date
          in: query
        - required: false
          schema:
            title: Media Duration From
            type: integer
          name: media_duration_from
          in: query
        - required: false
          schema:
            title: Media Duration To
            type: integer
          name: media_duration_to
          in: query
        - required: false
          schema:
            title: Category
            type: string
          name: category
          in: query
        - required: false
          schema:
            title: Editorial Selection
            type: string
          name: editorial_selection
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortingEnum'
            default: publication_date
          name: sort_by
          in: query
        - required: false
          schema:
            title: Series
            type: string
          name: series
          in: query
        - required: false
          schema:
            title: Favourite List
            type: string
          name: favourite_list
          in: query
        - required: false
          schema:
            title: Topics
            type: string
          name: topics
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/images/afp/usage/:
    get:
      tags:
        - Articles
      summary: Apf Usage
      operationId: apf_usage_api_images_afp_usage__get
      parameters:
        - required: false
          schema:
            title: Export
            enum:
              - csv
              - xlsx
            type: string
          name: export
          in: query
        - required: false
          schema:
            title: Published
            type: boolean
            default: false
          name: published
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/images/afp/:
    get:
      tags:
        - Articles
      summary: Search Afp Images
      operationId: search_afp_images_api_images_afp__get
      parameters:
        - required: true
          schema:
            title: Query
            type: string
          name: query
          in: query
        - required: false
          schema:
            title: Exclude
            type: string
          name: exclude
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/QueryOperatorEnum'
            default: OR
          name: query_operator
          in: query
        - required: false
          schema:
            title: Page
            type: integer
            default: 0
          name: page
          in: query
        - required: false
          schema:
            title: Articles Per Page
            type: integer
            default: 10
          name: articles_per_page
          in: query
        - required: false
          schema:
            title: Last Days
            type: integer
          name: last_days
          in: query
        - required: false
          schema:
            title: From Date
            type: string
            format: date-time
          name: from_date
          in: query
        - required: false
          schema:
            title: To Date
            type: string
            format: date-time
          name: to_date
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/chat/start/{organisation}/{article_id}':
    post:
      tags:
        - Articles
      summary: Start Thread
      operationId: start_thread_api_chat_start__organisation___article_id__post
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartThreadBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventId'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/chat/messages/{organisation}/{article_id}':
    get:
      tags:
        - Articles
      summary: Get Article Messages
      operationId: get_article_messages_api_chat_messages__organisation___article_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleThread'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/chat/messages/{thread_id}':
    get:
      tags:
        - Articles
      summary: Get Messages
      operationId: get_messages_api_chat_messages__thread_id__get
      parameters:
        - required: true
          schema:
            title: Thread Id
            type: string
          name: thread_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Messages Api Chat Messages  Thread Id  Get
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/chat/users/{room_id}':
    post:
      tags:
        - Articles
      summary: Force Join
      operationId: force_join_api_chat_users__room_id__post
      parameters:
        - required: true
          schema:
            title: Room Id
            type: string
          name: room_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForceJoinBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/chat/link:
    get:
      tags:
        - Articles
      summary: Link To Pilot
      operationId: link_to_pilot_api_chat_link_get
      parameters:
        - required: true
          schema:
            title: Article
            type: string
          name: article
          in: query
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            title: Version
            type: string
          name: version
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/chat/threads:
    get:
      tags:
        - Articles
      summary: Get Threads
      operationId: get_threads_api_chat_threads_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Threads Api Chat Threads Get
                type: array
                items:
                  $ref: '#/components/schemas/ArticleWithThread'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/chat/unarchive/:
    put:
      tags:
        - Articles
      summary: Unarchive
      operationId: unarchive_api_chat_unarchive__put
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnarchiveBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/chat/discussions/{organisation}/{article_id}':
    get:
      tags:
        - Articles
      summary: Get Discussion
      operationId: get_discussion_api_chat_discussions__organisation___article_id__get
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleDiscussion'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Articles
      summary: Update Discussion
      operationId: update_discussion_api_chat_discussions__organisation___article_id__put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Articles
      summary: Create Room
      operationId: create_room_api_chat_discussions__organisation___article_id__post
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/chat/notifications/:
    post:
      tags:
        - Articles
      summary: Send Chat Notifications
      operationId: send_chat_notifications_api_chat_notifications__post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatNotification'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/chat/discussions:
    get:
      tags:
        - Articles
      summary: Get Discussions
      operationId: get_discussions_api_chat_discussions_get
      parameters:
        - required: false
          schema:
            title: Page
            type: integer
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Discussions Per Page
            type: integer
            default: 30
          name: discussions_per_page
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticleDiscussions'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/chat/discussions/archive/{organisation}/{article_id}':
    put:
      tags:
        - Articles
      summary: Archive Discussion
      operationId: >-
        archive_discussion_api_chat_discussions_archive__organisation___article_id__put
      parameters:
        - required: true
          schema:
            title: Organisation
            type: string
          name: organisation
          in: path
        - required: true
          schema:
            title: Article Id
            type: string
          name: article_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/chat/login:
    post:
      tags:
        - Articles
      summary: Matrix Jwt
      operationId: matrix_jwt_api_chat_login_post
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/config/options:
    get:
      tags:
        - Config
      summary: Get Config
      operationId: get_config_api_config_options_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigSerialization'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/config/sections:
    get:
      tags:
        - Config
      summary: Get Sections Config
      operationId: get_sections_config_api_config_sections_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/config/{config_key}':
    put:
      tags:
        - Config
      summary: Update Config
      operationId: update_config_api_config__config_key__put
      parameters:
        - required: true
          schema:
            title: Config Key
            type: string
          name: config_key
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/contributions/templates:
    get:
      tags:
        - Contributions
      summary: List Templates
      operationId: list_templates_api_contributions_templates_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Templates Api Contributions Templates Get
                type: array
                items:
                  $ref: '#/components/schemas/ContributionTemplate'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/contributions/{template_id}/draft':
    post:
      tags:
        - Contributions
      summary: Create Contribution Draft
      operationId: create_contribution_draft_api_contributions__template_id__draft_post
      parameters:
        - required: true
          schema:
            title: Template Id
            type: string
          name: template_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionDraft'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/contributions/draft/{draft_id}':
    put:
      tags:
        - Contributions
      summary: Update Contribution Draft
      operationId: update_contribution_draft_api_contributions_draft__draft_id__put
      parameters:
        - required: true
          schema:
            title: Draft Id
            type: string
          name: draft_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContributionDraft'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Contributions
      summary: Delete Contribution Draft
      operationId: delete_contribution_draft_api_contributions_draft__draft_id__delete
      parameters:
        - required: true
          schema:
            title: Draft Id
            type: string
          name: draft_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/contributions/publish/{draft_id}':
    post:
      tags:
        - Contributions
      summary: Publish
      operationId: publish_api_contributions_publish__draft_id__post
      parameters:
        - required: true
          schema:
            title: Draft Id
            type: string
          name: draft_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedArticle'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/contributions:
    get:
      tags:
        - Contributions
      summary: List Contributions
      operationId: list_contributions_api_contributions_get
      parameters:
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Contributions Api Contributions Get
                type: array
                items:
                  $ref: '#/components/schemas/ContributionDraft'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/contributions/files/{draft_id}':
    post:
      tags:
        - Contributions
      summary: Upload File
      operationId: upload_file_api_contributions_files__draft_id__post
      parameters:
        - required: true
          schema:
            title: Draft Id
            type: string
          name: draft_id
          in: path
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/Body_upload_file_api_contributions_files__draft_id__post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContributionDraft'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/api/contributions/download/{draft_id}':
    get:
      tags:
        - Contributions
      summary: Download
      operationId: download_api_contributions_download__draft_id__get
      parameters:
        - required: true
          schema:
            title: Draft Id
            type: string
          name: draft_id
          in: path
        - required: true
          schema:
            title: Pos
            type: integer
          name: pos
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/car/sources/:
    get:
      tags:
        - Car
      summary: Get Car Sources
      operationId: get_car_sources_api_car_sources__get
      parameters:
        - required: false
          schema:
            title: Language
            type: string
          name: language
          in: query
        - required: false
          schema:
            title: Country
            type: string
          name: country
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Car Sources Api Car Sources  Get
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/CarSource'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/car/episodes/:
    get:
      tags:
        - Car
      summary: Get Car Episodes
      operationId: get_car_episodes_api_car_episodes__get
      parameters:
        - required: false
          schema:
            title: Query
            type: string
          name: query
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/QueryOperatorEnum'
            default: OR
          name: query_operator
          in: query
        - required: false
          schema:
            title: Language
            type: string
            default: en
          name: language
          in: query
        - required: false
          schema:
            title: Country
            type: string
          name: country
          in: query
        - required: false
          schema:
            title: Organisation
            type: string
          name: organisation
          in: query
        - required: false
          schema:
            title: Durationseconds
            type: integer
          name: durationSeconds
          in: query
        - required: false
          schema:
            title: Agehours
            type: integer
            default: 24
          name: ageHours
          in: query
        - required: false
          schema:
            title: Sourceid
            type: string
          name: sourceId
          in: query
        - required: false
          schema:
            title: Category
            type: string
          name: category
          in: query
        - required: false
          schema:
            title: Page
            type: integer
            default: 0
          name: page
          in: query
        - required: false
          schema:
            title: Articles Per Page
            type: integer
            default: 20
          name: articles_per_page
          in: query
        - required: false
          schema:
            title: Authorization
            type: string
          name: authorization
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Car Episodes Api Car Episodes  Get
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/CarEpisode'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AggregatedPaginatedResponse:
      title: AggregatedPaginatedResponse
      required:
        - items
        - total_items
        - total_pages
        - aggregations
      type: object
      properties:
        current_date:
          title: Current Date
          type: string
          format: date-time
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/SimplifiedArticle'
        total_items:
          title: Total Items
          type: integer
        total_pages:
          title: Total Pages
          type: integer
        aggregations:
          title: Aggregations
          type: object
    ArticleCluster:
      title: ArticleCluster
      type: object
      properties:
        cluster_id:
          title: Cluster Id
          type: string
          description: The cluster id that we get from peach
        title:
          title: Title
          type: string
          description: Descriptive title taken from one of the articles
        thumbnail_article_id:
          title: Thumbnail Article Id
          type: string
          description: Thumbnail article id
        thumbnail_article_organisation:
          title: Thumbnail Article Organisation
          type: string
          description: Thumbnail article org
        items_count:
          title: Items Count
          type: integer
          description: Number of articles that belong to cluster
        sources:
          title: Sources
          type: array
          items:
            type: string
          description: The sources of the articles
        aggregations:
          title: Aggregations
          type: object
          description: Aggregations based on articles
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/SimplifiedArticle'
        summary:
          title: Summary
          type: string
    ArticleCreate:
      title: ArticleCreate
      required:
        - id
        - organisation
        - original_language
        - url
        - publication_date
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Internal provider id
          example: article_id
        organisation:
          title: Organisation
          type: string
          description: Provider organization name
          example: BBC
        original_language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article original language
          example: en
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        thumbnail:
          title: Thumbnail
          anyOf:
            - $ref: '#/components/schemas/Thumbnail'
            - maxLength: 2083
              minLength: 1
              type: string
              format: uri
        categories:
          title: Categories
          uniqueItems: true
          type: array
          items:
            type: string
          description: List of article categories
          example:
            - news
            - local
        tags:
          title: Tags
          uniqueItems: true
          type: array
          items:
            type: string
          description: List of article tags
          example:
            - news
            - local
        author:
          title: Author
          type: string
          description: Name of the author of the article
          example: Some Author
        text_rights_clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          description: Rights clearence for the text part of the article
          default: unknown
          hidden_from_schema: true
        publication_date:
          title: Publication Date
          type: string
          description: Datetime of article publication
          format: date-time
          example: '2020-07-08T20:50:43Z'
        modification_date:
          title: Modification Date
          type: string
          description: Datetime of article modification
          format: date-time
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of article expiration
          format: date-time
          example: '2020-07-08T20:50:43Z'
        sections:
          title: Sections
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TextSection'
              - $ref: '#/components/schemas/TitleSection'
              - $ref: '#/components/schemas/LeadSection'
              - $ref: '#/components/schemas/HeaderSection'
              - $ref: '#/components/schemas/ImageSection'
              - $ref: '#/components/schemas/QuoteSection'
              - $ref: '#/components/schemas/VerbatimSection'
              - $ref: '#/components/schemas/TwitterSection'
              - $ref: '#/components/schemas/InstagramSection'
              - $ref: '#/components/schemas/ImageSectionFallback'
              - $ref: '#/components/schemas/LinkSection'
              - $ref: '#/components/schemas/ListSection'
              - $ref: '#/components/schemas/YoutubeSection'
              - $ref: '#/components/schemas/MetadataSection'
              - $ref: '#/components/schemas/MediaSection'
              - $ref: '#/components/schemas/AuthorSection'
            discriminator:
              propertyName: type
              mapping:
                text: '#/components/schemas/TextSection'
                title: '#/components/schemas/TitleSection'
                lead: '#/components/schemas/LeadSection'
                header: '#/components/schemas/HeaderSection'
                image: '#/components/schemas/ImageSection'
                quote: '#/components/schemas/QuoteSection'
                verbatim: '#/components/schemas/VerbatimSection'
                twitter: '#/components/schemas/TwitterSection'
                instagram: '#/components/schemas/InstagramSection'
                fallback: '#/components/schemas/ImageSectionFallback'
                link: '#/components/schemas/LinkSection'
                list: '#/components/schemas/ListSection'
                youtube: '#/components/schemas/YoutubeSection'
                metadata: '#/components/schemas/MetadataSection'
                media: '#/components/schemas/MediaSection'
                author: '#/components/schemas/AuthorSection'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageEnum'
          description: List of available languages
          example:
            - en
            - de
            - fr
        editorial_requests:
          title: Editorial Requests
          type: array
          items:
            $ref: '#/components/schemas/EditorialRequest'
          description: List of editorial requests.
          example:
            - user:
                id: '1234567'
                name: Pawel Glimos
              date: '2024-05-08T10:20:10.901757'
          hidden_from_schema: true
        score:
          title: Score
          type: number
          hidden_from_schema: true
        topics:
          title: Topics
          type: array
          items:
            type: object
          description: List of article topics
          hidden_from_schema: true
        series:
          title: Series
          type: string
          description: 'If an article is a part of a series, the series title'
        short_description:
          title: Short Description
          type: string
          description: 'If it is defined, a short description of the contents'
      description: >-
        Basic input format for the system. Internally it is translated to
        VersionedArticle
    ArticleDiscussion:
      title: ArticleDiscussion
      required:
        - id
        - organisation
        - room_id
        - title
        - messages_count
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Articles id
        organisation:
          title: Organisation
          type: string
          description: Articles organisation
        room_id:
          title: Room Id
          type: string
          description: Articles room id
        title:
          title: Title
          type: string
          description: Articles title
        messages_count:
          title: Messages Count
          type: integer
          description: No. of messages
        last_updated_at:
          title: Last Updated At
          type: string
          format: date-time
    ArticleIdentifier:
      title: ArticleIdentifier
      required:
        - id
        - organisation
      type: object
      properties:
        id:
          title: Id
          type: string
        organisation:
          title: Organisation
          type: string
    ArticlePopularity:
      title: ArticlePopularity
      required:
        - hits
        - displays
      type: object
      properties:
        hits:
          title: Hits
          type: integer
        displays:
          title: Displays
          type: integer
    ArticleRender:
      title: ArticleRender
      required:
        - id
        - organisation
        - url
        - sections
        - publication_date
        - language
        - title_prefix
        - footer
        - view_original
        - next_item
        - previous_item
        - ai_disclaimer
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Internal provider id
          example: article_id
        organisation:
          title: Organisation
          type: string
          description: Provider organization name
          example: BBC
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        author:
          title: Author
          type: string
          description: Name of the author of the article
          example: Some Author
        categories:
          title: Categories
          type: array
          items:
            $ref: '#/components/schemas/CategoryRender'
          description: Categories of the article
        sections:
          title: Sections
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TextSection'
              - $ref: '#/components/schemas/TitleSection'
              - $ref: '#/components/schemas/LeadSection'
              - $ref: '#/components/schemas/HeaderSection'
              - $ref: '#/components/schemas/ImageSection'
              - $ref: '#/components/schemas/QuoteSection'
              - $ref: '#/components/schemas/VerbatimSection'
              - $ref: '#/components/schemas/TwitterSection'
              - $ref: '#/components/schemas/InstagramSection'
              - $ref: '#/components/schemas/ImageSectionFallback'
              - $ref: '#/components/schemas/LinkSection'
              - $ref: '#/components/schemas/ListSection'
              - $ref: '#/components/schemas/YoutubeSection'
              - $ref: '#/components/schemas/MetadataSection'
              - $ref: '#/components/schemas/MediaSection'
              - $ref: '#/components/schemas/AuthorSection'
            discriminator:
              propertyName: type
              mapping:
                text: '#/components/schemas/TextSection'
                title: '#/components/schemas/TitleSection'
                lead: '#/components/schemas/LeadSection'
                header: '#/components/schemas/HeaderSection'
                image: '#/components/schemas/ImageSection'
                quote: '#/components/schemas/QuoteSection'
                verbatim: '#/components/schemas/VerbatimSection'
                twitter: '#/components/schemas/TwitterSection'
                instagram: '#/components/schemas/InstagramSection'
                fallback: '#/components/schemas/ImageSectionFallback'
                link: '#/components/schemas/LinkSection'
                list: '#/components/schemas/ListSection'
                youtube: '#/components/schemas/YoutubeSection'
                metadata: '#/components/schemas/MetadataSection'
                media: '#/components/schemas/MediaSection'
                author: '#/components/schemas/AuthorSection'
        publication_date:
          title: Publication Date
          anyOf:
            - type: string
            - type: string
              format: date-time
          description: Datetime of article publication
          example: '2020-07-08T20:50:43Z'
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article language
          example: en
        country_origin:
          title: Country Origin
          type: string
          description: Country of origin
        country_code:
          title: Country Code
          type: string
          description: Country code of org
        title_prefix:
          title: Title Prefix
          type: string
          description: Title that is displayed when box is rendered
          example: Reco by EBU
        footer:
          title: Footer
          type: string
          description: Footer that is displayed when box is rendered
          example: By Eurovision
        view_original:
          title: View Original
          type: string
          description: View original article text - translated
          example: View original
        next_item:
          title: Next Item
          type: string
          description: Footer that is displayed when box is rendered
          example: Next
        previous_item:
          title: Previous Item
          type: string
          description: Footer that is displayed when box is rendered
          example: Previous
        clipboard:
          title: Clipboard
          type: string
          description: Copy to clipboard message
          default: Copied to clipboard!
        ai_disclaimer:
          title: Ai Disclaimer
          type: string
          description: AI translation disclaimer - translsated
        colour_scheme:
          allOf:
            - $ref: '#/components/schemas/RecoBoxColourScheme'
          description: Colour scheme used when box is rendered
          default: automatic
        theme:
          title: Theme
          type: string
          description: Colour scheme used when box is rendered
          default: blue
        warnings:
          title: Warnings
          type: array
          items:
            $ref: '#/components/schemas/RenderWarning'
          description: List of interventions to the article
        automatic_reco_box:
          title: Automatic Reco Box
          type: string
          description: Automatic reco box id shown in the overlay footer
        sharing_enabled:
          title: Sharing Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
          default: false
        missing:
          title: Missing
          type: boolean
          description: Whether the article is missing
          default: false
    ArticleStat:
      title: ArticleStat
      required:
        - organisation
        - popularity
      type: object
      properties:
        organisation:
          title: Organisation
          type: string
        popularity:
          $ref: '#/components/schemas/ArticlePopularity'
    ArticleThread:
      title: ArticleThread
      required:
        - no_messages
        - messages
      type: object
      properties:
        thread_id:
          title: Thread Id
          type: string
          description: ID of the thread belonging to the article
        no_messages:
          title: No Messages
          type: integer
          description: Number of messages in the thread
        messages:
          title: Messages
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: List of messages in the thread
    ArticleUpdate:
      title: ArticleUpdate
      required:
        - sections
      type: object
      properties:
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        thumbnail:
          title: Thumbnail
          anyOf:
            - $ref: '#/components/schemas/Thumbnail'
            - maxLength: 2083
              minLength: 1
              type: string
              format: uri
          description: Url to the thumbnail of the article
          example: 'https://some.website/article/thumb.jpg'
        categories:
          title: Categories
          uniqueItems: true
          type: array
          items:
            type: string
          description: List of article categories
          example:
            - news
            - local
        tags:
          title: Tags
          uniqueItems: true
          type: array
          items:
            type: string
          description: List of article tags
          example:
            - news
            - local
        author:
          title: Author
          type: string
          description: Name of the author of the article
          example: Some Author
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article language
          example: en
        text_rights_clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          description: Rights clearence for the text part of the article
          default: unknown
        parent_id:
          title: Parent Id
          type: string
          description: Id of the parent version of article
        publication_date:
          title: Publication Date
          type: string
          description: Datetime of article publication
          format: date-time
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of article expiration
          format: date-time
        modification_date:
          title: Modification Date
          type: string
          description: Datetime of article modification
          format: date-time
        sections:
          title: Sections
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TextSection'
              - $ref: '#/components/schemas/TitleSection'
              - $ref: '#/components/schemas/LeadSection'
              - $ref: '#/components/schemas/HeaderSection'
              - $ref: '#/components/schemas/ImageSection'
              - $ref: '#/components/schemas/QuoteSection'
              - $ref: '#/components/schemas/VerbatimSection'
              - $ref: '#/components/schemas/TwitterSection'
              - $ref: '#/components/schemas/InstagramSection'
              - $ref: '#/components/schemas/ImageSectionFallback'
              - $ref: '#/components/schemas/LinkSection'
              - $ref: '#/components/schemas/ListSection'
              - $ref: '#/components/schemas/YoutubeSection'
              - $ref: '#/components/schemas/MetadataSection'
              - $ref: '#/components/schemas/MediaSection'
              - $ref: '#/components/schemas/AuthorSection'
            discriminator:
              propertyName: type
              mapping:
                text: '#/components/schemas/TextSection'
                title: '#/components/schemas/TitleSection'
                lead: '#/components/schemas/LeadSection'
                header: '#/components/schemas/HeaderSection'
                image: '#/components/schemas/ImageSection'
                quote: '#/components/schemas/QuoteSection'
                verbatim: '#/components/schemas/VerbatimSection'
                twitter: '#/components/schemas/TwitterSection'
                instagram: '#/components/schemas/InstagramSection'
                fallback: '#/components/schemas/ImageSectionFallback'
                link: '#/components/schemas/LinkSection'
                list: '#/components/schemas/ListSection'
                youtube: '#/components/schemas/YoutubeSection'
                metadata: '#/components/schemas/MetadataSection'
                media: '#/components/schemas/MediaSection'
                author: '#/components/schemas/AuthorSection'
        series:
          title: Series
          type: string
          description: 'If an article is a part of a series, the series id'
        origin:
          $ref: '#/components/schemas/OriginEnum'
        constructive:
          title: Constructive
          type: boolean
          description: Whether the articles version is constructive. Set by PEACH.
        public_service_algorithm:
          title: Public Service Algorithm
          type: array
          items:
            $ref: '#/components/schemas/PSAValue'
        short_description:
          title: Short Description
          type: string
          description: 'If it is defined, a short description of the contents'
    ArticleVersion:
      title: ArticleVersion
      required:
        - id
        - language
        - sections
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Version id
          example: version_id
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article original language
          example: en
        parent_id:
          title: Parent Id
          type: string
          description: Id of the parent version of article
        origin:
          allOf:
            - $ref: '#/components/schemas/OriginEnum'
          description: Source of the article
          default: original
        translation_engine:
          allOf:
            - $ref: '#/components/schemas/TranslationEnginesEnum'
          description: If translated - engine used to do the translation
        editor:
          title: Editor
          allOf:
            - $ref: '#/components/schemas/User'
          description: If edited - keycloak user who did the edit
        text_rights_clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          description: Rights clearence for the text part of the article
          default: unknown
        text_rights_locked:
          title: Text Rights Locked
          type: boolean
          description: Indicates whether the rights_clearance flag can be changed.
          default: false
        approvals:
          title: Approvals
          type: array
          items:
            $ref: '#/components/schemas/EditLog'
          description: List of approvals
          default: []
        modification_date:
          title: Modification Date
          type: string
          description: Datetime of version creation
          format: date-time
        sections:
          title: Sections
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TextSection'
              - $ref: '#/components/schemas/TitleSection'
              - $ref: '#/components/schemas/LeadSection'
              - $ref: '#/components/schemas/HeaderSection'
              - $ref: '#/components/schemas/ImageSection'
              - $ref: '#/components/schemas/QuoteSection'
              - $ref: '#/components/schemas/VerbatimSection'
              - $ref: '#/components/schemas/TwitterSection'
              - $ref: '#/components/schemas/InstagramSection'
              - $ref: '#/components/schemas/ImageSectionFallback'
              - $ref: '#/components/schemas/LinkSection'
              - $ref: '#/components/schemas/ListSection'
              - $ref: '#/components/schemas/YoutubeSection'
              - $ref: '#/components/schemas/MetadataSection'
              - $ref: '#/components/schemas/MediaSection'
              - $ref: '#/components/schemas/AuthorSection'
            discriminator:
              propertyName: type
              mapping:
                text: '#/components/schemas/TextSection'
                title: '#/components/schemas/TitleSection'
                lead: '#/components/schemas/LeadSection'
                header: '#/components/schemas/HeaderSection'
                image: '#/components/schemas/ImageSection'
                quote: '#/components/schemas/QuoteSection'
                verbatim: '#/components/schemas/VerbatimSection'
                twitter: '#/components/schemas/TwitterSection'
                instagram: '#/components/schemas/InstagramSection'
                fallback: '#/components/schemas/ImageSectionFallback'
                link: '#/components/schemas/LinkSection'
                list: '#/components/schemas/ListSection'
                youtube: '#/components/schemas/YoutubeSection'
                metadata: '#/components/schemas/MetadataSection'
                media: '#/components/schemas/MediaSection'
                author: '#/components/schemas/AuthorSection'
        score:
          title: Score
          type: number
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        constructive:
          title: Constructive
          type: boolean
          description: Whether the articles version is constructive. Set by PEACH.
        is_checked:
          title: Is Checked
          type: boolean
          default: false
        is_checked_by_edit_log:
          title: Is Checked By Edit Log
          type: array
          items:
            $ref: '#/components/schemas/EditLog'
          description: Edit log of history changes for is_checked flag.
        short_description:
          title: Short Description
          type: string
          description: 'If it is defined, a short description of the contents'
        text_rights_cleared_at:
          title: Text Rights Cleared At
          type: string
          description: Datetime when the text rights was set to cleared.
          format: date-time
    ArticleWithThread:
      title: ArticleWithThread
      required:
        - id
        - organisation
        - matrix_thread_id
        - title
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Articles id
        organisation:
          title: Organisation
          type: string
          description: Articles organisation
        matrix_thread_id:
          title: Matrix Thread Id
          type: string
          description: Articles thread id
        title:
          title: Title
          type: string
          description: Articles title
    AudiovoxJob:
      title: AudiovoxJob
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: '[Internally used] Eurovox job identifier'
          example: 60cc5a04ebc2cd3ffc607665
        name:
          title: Name
          type: string
          description: '[Internally used] Eurovox job name'
          example: wild-emerald-mink
    AuthorSection:
      title: AuthorSection
      required:
        - type
        - first_name
        - last_name
      type: object
      properties:
        type:
          title: Type
          enum:
            - author
          type: string
          description: Section type - author
          example: author
        honorific:
          title: Honorific
          type: string
          description: >-
            Form which encodes the relative social status of the participants of
            the conversation.
          example: Dr
        first_name:
          title: First Name
          type: string
          description: Author first name.
          example: John
        last_name:
          title: Last Name
          type: string
          description: Author last name.
          example: Travolta
        expertise:
          title: Expertise
          type: string
        company:
          title: Company
          type: string
        link:
          title: Link
          maxLength: 2083
          minLength: 1
          type: string
          description: Author personal page.
          format: uri
        twitter_handle:
          title: Twitter Handle
          maxLength: 64
          type: string
          description: Twitter username
          example: EBU_HQ
    Body_set_media_error_status_api_media_downloading_error__organisation___article_id___version_id__post:
      title: >-
        Body_set_media_error_status_api_media_downloading_error__organisation___article_id___version_id__post
      required:
        - pos
      type: object
      properties:
        pos:
          title: Pos
          type: integer
    Body_upload_file_api_contributions_files__draft_id__post:
      title: Body_upload_file_api_contributions_files__draft_id__post
      required:
        - pos
        - file
      type: object
      properties:
        pos:
          title: Pos
          type: integer
        file:
          title: File
          type: string
          format: binary
        lang:
          title: Lang
          type: string
        is_thumbnail:
          title: Is Thumbnail
          type: boolean
          default: false
    Body_upload_file_api_drafts_files__draft_uuid__post:
      title: Body_upload_file_api_drafts_files__draft_uuid__post
      required:
        - file
      type: object
      properties:
        pos:
          title: Pos
          type: integer
        file:
          title: File
          type: string
          format: binary
        lang:
          title: Lang
          type: string
        is_thumbnail:
          title: Is Thumbnail
          type: boolean
          default: false
        type:
          title: Type
          type: string
    Body_upload_image_api_media_upload_image__post:
      title: Body_upload_image_api_media_upload_image__post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          format: binary
    BoxStateEnum:
      title: BoxStateEnum
      enum:
        - unpublished
        - draft
        - published
      type: string
      description: An enumeration.
    BoxSummaryData:
      title: BoxSummaryData
      type: object
      properties:
        contributions:
          title: Contributions
          allOf:
            - $ref: '#/components/schemas/ContributionsBoxSummaryData'
          default:
            contributions: 0
            unique_publications: 0
            publications_count: 0
            hits: 0
            displays: 0
        publications:
          title: Publications
          allOf:
            - $ref: '#/components/schemas/PublicationsBoxSummaryData'
          default:
            total_published: 0
            total_sources: 0
            hits: 0
            displays: 0
    BucketByPublicationDateIntervalEnum:
      title: BucketByPublicationDateIntervalEnum
      enum:
        - hour
        - minute
        - day
        - week
        - month
        - quarter
        - year
      type: string
      description: An enumeration.
    CarEpisode:
      title: CarEpisode
      required:
        - id
        - title
        - sourceName
        - sourceID
        - author
        - imageUrl
        - mediaFileUrl
        - estimatedDurationSeconds
        - publishTime
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Id of the episode
        title:
          title: Title
          type: string
          description: Episode title
          example: "\U0001F3A7 BBC Sport News Thursday, 8 AM"
        previewText:
          title: Previewtext
          type: string
          description: short description of the episode
          example: The latest sports news from the BBC
        sourceName:
          title: Sourcename
          type: string
          description: Parent Program of the episode
        sourceID:
          title: Sourceid
          type: string
          description: ID of Program of the episode
        codec:
          title: Codec
          type: string
          default: mp3
        containerFormat:
          title: Containerformat
          type: string
          default: mp3
        author:
          title: Author
          type: string
          description: Source of the episode
          example: ZZEBU
        imageUrl:
          title: Imageurl
          type: string
          description: URL for illustration image for the episode
        mediaFileUrl:
          title: Mediafileurl
          type: string
          description: URL for media file
        estimatedDurationSeconds:
          title: Estimateddurationseconds
          type: integer
          description: Duration of media seconds
        publishTime:
          title: Publishtime
          type: string
          description: Publication date of media
          format: date-time
    CarSource:
      title: CarSource
      required:
        - sourceId
        - sourceName
        - category
        - imageUrl
      type: object
      properties:
        sourceId:
          title: Sourceid
          type: string
          description: ID of the series
        sourceName:
          title: Sourcename
          type: string
          description: Name of the series
        category:
          title: Category
          type: string
          description: Series category
        imageUrl:
          title: Imageurl
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to series image
          format: uri
    CategoryRender:
      title: CategoryRender
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the category
        description:
          title: Description
          type: string
          description: Single language description
        logo:
          title: Logo
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    ChatGPTQuery:
      title: ChatGPTQuery
      required:
        - query
        - articles
      type: object
      properties:
        query:
          title: Query
          type: string
        articles:
          title: Articles
          type: array
          items:
            $ref: '#/components/schemas/ArticleIdentifier'
        min_article_size:
          title: Min Article Size
          type: integer
          default: 200
        max_article_size:
          title: Max Article Size
          type: integer
          default: 2000
        max_total_size:
          title: Max Total Size
          type: integer
          default: -1
        openai_completion_model:
          allOf:
            - $ref: '#/components/schemas/OpenAIModel'
          default: gpt-3.5-turbo
        openai_max_tokens:
          title: Openai Max Tokens
          type: integer
          default: 1000
        openai_temperature:
          title: Openai Temperature
          type: integer
          default: 0
        openai_frequency_penalty:
          title: Openai Frequency Penalty
          type: number
          default: 0
        openai_presence_penalty:
          title: Openai Presence Penalty
          type: number
          default: 0
        openai_top_p:
          title: Openai Top P
          type: integer
          default: 1
        prompt_model_id:
          title: Prompt Model Id
          type: string
          default: basic
        stream:
          title: Stream
          type: boolean
          default: false
    ChatNotification:
      title: ChatNotification
      required:
        - users
        - name
        - type
      type: object
      properties:
        users:
          title: Users
          type: array
          items:
            type: string
        name:
          title: Name
          type: string
        type:
          title: Type
          type: string
    CheckedUpdate:
      title: CheckedUpdate
      type: object
      properties:
        is_checked:
          title: Is Checked
          type: boolean
          default: false
    ClusterSortingEnum:
      title: ClusterSortingEnum
      enum:
        - recency
        - coverage
      type: string
      description: An enumeration.
    ConfigSerialization:
      title: ConfigSerialization
      type: object
      properties:
        translation_engines:
          title: Translation Engines
          minLength: 3
          type: array
          items:
            minLength: 3
            type: string
          example:
            - DEEPL
            - AWS
            - GOOGLE
        transcription_engines:
          title: Transcription Engines
          minLength: 3
          type: array
          items:
            minLength: 3
            type: string
          example:
            - DEEPL
            - AWS
            - GOOGLE
        revoicing_engine:
          allOf:
            - $ref: '#/components/schemas/RevoicingEnginesEnum'
          default: AZURE
          example: AZURE
    ConstructiveBody:
      title: ConstructiveBody
      required:
        - constructive
        - version_id
      type: object
      properties:
        constructive:
          $ref: '#/components/schemas/ConstructiveEnum'
        version_id:
          title: Version Id
          type: string
    ConstructiveEnum:
      title: ConstructiveEnum
      enum:
        - constructive
        - not_constructive
      type: string
      description: An enumeration.
    ContributionDraft:
      title: ContributionDraft
      type: object
      properties:
        id:
          title: Id
          type: string
        template_id:
          title: Template Id
          type: string
          description: The id of the template used to create the draft
        organisation:
          title: Organisation
          type: string
        original_language:
          title: Original Language
          type: string
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        publication_date:
          title: Publication Date
          type: string
          format: date-time
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageEnum'
        thumbnail:
          title: Thumbnail
          allOf:
            - $ref: '#/components/schemas/Thumbnail'
          description: Url to the thumbnail of the article
          example: 'https://some.website/article/thumb.jpg'
        categories:
          title: Categories
          uniqueItems: true
          type: array
          items:
            type: string
          description: List of article categories
          example:
            - news
            - local
        tags:
          title: Tags
          uniqueItems: true
          type: array
          items:
            type: string
          description: List of article tags
          example:
            - news
            - local
        author:
          title: Author
          type: string
          description: Name of the author of the article
          example: Some Author
        text_rights_clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          description: Rights clearence for the text part of the article
          default: unknown
          hidden_from_schema: true
        modification_date:
          title: Modification Date
          type: string
          description: Datetime of article modification
          format: date-time
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of article expiration
          format: date-time
          example: '2020-07-08T20:50:43Z'
        sections:
          title: Sections
          type: array
          items:
            type: object
        editorial_requests:
          title: Editorial Requests
          type: array
          items:
            $ref: '#/components/schemas/EditorialRequest'
          description: List of editorial requests.
          example:
            - user:
                id: '1234567'
                name: Pawel Glimos
              date: '2024-05-08T10:20:10.963273'
          hidden_from_schema: true
        score:
          title: Score
          type: number
          hidden_from_schema: true
        topics:
          title: Topics
          type: array
          items:
            type: object
          description: List of article topics
          hidden_from_schema: true
        series:
          title: Series
          type: string
          description: 'If an article is a part of a series, the series title'
    ContributionTemplate:
      title: ContributionTemplate
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        sections:
          title: Sections
          type: array
          items:
            $ref: '#/components/schemas/ContributionTemplateSection'
    ContributionTemplateSection:
      title: ContributionTemplateSection
      required:
        - type
        - label
      type: object
      properties:
        type:
          title: Type
          type: string
          description: Class name of the section type
        label:
          title: Label
          type: string
          description: Label the section is signed in the editor
        required:
          title: Required
          type: array
          items:
            type: string
          description: List of required fields
    ContributionsBoxSummaryData:
      title: ContributionsBoxSummaryData
      type: object
      properties:
        contributions:
          title: Contributions
          type: integer
          default: 0
        unique_publications:
          title: Unique Publications
          type: integer
          default: 0
        publications_count:
          title: Publications Count
          type: integer
          default: 0
        hits:
          title: Hits
          type: integer
          default: 0
        displays:
          title: Displays
          type: integer
          default: 0
    DashboardDataFileNamesEnum:
      title: DashboardDataFileNamesEnum
      enum:
        - data_per_contributor
        - data_per_publisher
      type: string
      description: An enumeration.
    EditLog:
      title: EditLog
      required:
        - editor
      type: object
      properties:
        edit_date:
          title: Edit Date
          type: string
          description: RecoBox modification time
          format: date-time
        editor:
          title: Editor
          allOf:
            - $ref: '#/components/schemas/User'
          description: The editor
          example: '{''id'': ''1234567'', ''name'': ''Pawel Glimos''}'
        description:
          title: Description
          type: string
          description: Description of the change
        reason:
          title: Reason
          type: string
          description: Reason for the change
    EditorialRequest:
      title: EditorialRequest
      required:
        - user
        - date
        - organisation
        - article_id
      type: object
      properties:
        user:
          title: User
          allOf:
            - $ref: '#/components/schemas/User'
          description: A user who made a request
          example:
            id: '1234567'
            name: Pawel Glimos
        date:
          title: Date
          type: string
          description: Request made datetime.
          format: date-time
        organisation:
          title: Organisation
          type: string
        article_id:
          title: Article Id
          type: string
    EditorialSelectionListItem:
      title: EditorialSelectionListItem
      required:
        - title
        - count
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          description: Automatically generated uuid
        title:
          title: Title
          type: string
          description: Title that is displayed when box is rendered
          example: Reco by EBU
        count:
          title: Count
          type: integer
          description: The number of items in an editorial selection
          example: '12'
    EventId:
      title: EventId
      required:
        - event_id
      type: object
      properties:
        event_id:
          title: Event Id
          type: string
          description: Event id
    FavouriteArticle:
      title: FavouriteArticle
      required:
        - id
        - organisation
      type: object
      properties:
        id:
          title: Id
          type: string
        organisation:
          title: Organisation
          type: string
        version_id:
          title: Version Id
          type: string
    FavouriteListCreate:
      title: FavouriteListCreate
      required:
        - title
      type: object
      properties:
        title:
          title: Title
          type: string
        articles:
          title: Articles
          type: array
          items:
            $ref: '#/components/schemas/FavouriteArticle'
    FavouriteListUpdate:
      title: FavouriteListUpdate
      type: object
      properties:
        title:
          title: Title
          type: string
        articles:
          title: Articles
          type: array
          items:
            $ref: '#/components/schemas/FavouriteArticle'
    ForceJoinBody:
      title: ForceJoinBody
      required:
        - user_id
      type: object
      properties:
        user_id:
          title: User Id
          type: string
          description: Matrix user id.
    GptResponse:
      title: GptResponse
      required:
        - gpt_response
      type: object
      properties:
        gpt_response:
          title: Gpt Response
          type: string
        prompt:
          title: Prompt
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        articles:
          title: Articles
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        error:
          title: Error
          type: string
    Group:
      title: Group
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Keycloak Group ID
          example: group_id
        name:
          title: Name
          type: string
          description: Keycloak Group Name
          example: Group
        description:
          title: Description
          type: string
          description: Keycloak Group Description
          example: The best groups
        roles:
          title: Roles
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: Roles included in the group
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    HeaderSection:
      title: HeaderSection
      required:
        - type
        - level
        - text
      type: object
      properties:
        type:
          title: Type
          enum:
            - header
          type: string
          description: Section type - 'header'
          example: header
        level:
          title: Level
          type: integer
          description: 'The level of the header. The higher the number, the less important.'
          example: '1'
        text:
          title: Text
          type: string
          description: Content of the header.
          example: This is how you define a header
    ImageOriginEnum:
      title: ImageOriginEnum
      enum:
        - original
        - afp
        - uploaded
      type: string
      description: An enumeration.
    ImageSection:
      title: ImageSection
      required:
        - type
        - url
      type: object
      properties:
        type:
          title: Type
          enum:
            - image
          type: string
          description: Section type - 'image'
          example: image
        id:
          title: Id
          type: string
          description: If origin uses id - image id
        origin:
          allOf:
            - $ref: '#/components/schemas/ImageOriginEnum'
          description: Image origin
          default: original
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the image
          format: uri
          example: 'https://url.to.image/image.jpg'
        alt:
          title: Alt
          type: string
          description: Alternative text to display if image does not appear.
          example: The alternative text.
        rights_clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          description: Rights clearence for media
          default: unknown
        rights_locked:
          title: Rights Locked
          type: boolean
          description: Indicates whether the rights_clearance flag can be changed.
          default: false
        caption:
          title: Caption
          type: string
          description: The description of the image.
          example: The description of the image.
        source:
          title: Source
          type: string
          description: An Author or Organization Name
          example: Pawel Glimos
    ImageSectionFallback:
      title: ImageSectionFallback
      required:
        - type
        - url
        - text
      type: object
      properties:
        type:
          title: Type
          enum:
            - fallback
          type: string
          description: Section type - 'fallback'
          example: fallback
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the image
          format: uri
          example: 'https://url.to.image/image.jpg'
        text:
          title: Text
          type: string
          description: Image can not be shown due to copy rights restrictions.
      description: >-
        Read-only section for reco boxes. Used in stead of normal IOmageSection
        when the

        original image has a copy rights restrictions.
    InfoBanner:
      title: InfoBanner
      type: object
      properties:
        _id:
          title: ' Id'
          type: string
          description: MongoDB internal id
          example: ObjectId('616e9314a4a552f3345ee88e')
        message:
          title: Message
          type: string
          description: Message of the banner
        severity:
          allOf:
            - $ref: '#/components/schemas/InfoBannerSeverityEnum'
          description: Severity of the banner
        audience:
          allOf:
            - $ref: '#/components/schemas/InfoBannerAudienceEnum'
          description: Audience of the banner
        is_active:
          title: Is Active
          type: boolean
          description: If the banner is active
        history:
          title: History
          type: array
          items:
            $ref: '#/components/schemas/InfoBannerHistory'
          description: History of the banner
    InfoBannerAudienceEnum:
      title: InfoBannerAudienceEnum
      enum:
        - erb_editors
        - all_users
      type: string
      description: An enumeration.
    InfoBannerHistory:
      title: InfoBannerHistory
      required:
        - user
        - content
      type: object
      properties:
        date:
          title: Date
          type: string
          description: Creation date.
          format: date-time
        user:
          title: User
          type: string
          description: User who did the edit
        content:
          title: Content
          type: string
          description: History note
    InfoBannerSeverityEnum:
      title: InfoBannerSeverityEnum
      enum:
        - info
        - warning
        - critical
      type: string
      description: An enumeration.
    InstagramSection:
      title: InstagramSection
      required:
        - type
        - post_id
      type: object
      properties:
        type:
          title: Type
          enum:
            - instagram
          type: string
          description: Section type - 'instagram'
          example: instagram
        post_id:
          title: Post Id
          type: string
          description: Id of an instagram post
          example: '1324060283103518721'
    LanguageEnum:
      title: LanguageEnum
      enum:
        - ar
        - bg
        - cs
        - hr
        - da
        - nl
        - de
        - is
        - es
        - en
        - et
        - fi
        - fr
        - ka
        - el
        - hu
        - it
        - lv
        - lt
        - 'no'
        - ps
        - pl
        - pt
        - ro
        - rm
        - ru
        - sr
        - sk
        - sl
        - sv
        - tr
        - uk
        - zx
      type: string
      description: The languages that we support for translations
    LeadSection:
      title: LeadSection
      required:
        - type
        - text
      type: object
      properties:
        type:
          title: Type
          enum:
            - lead
          type: string
          description: Section type - 'lead'
          example: lead
        text:
          title: Text
          type: string
          description: Content of the lead.
          example: This is how you define a lead.
    LinkSection:
      title: LinkSection
      required:
        - type
        - url
      type: object
      properties:
        type:
          title: Type
          enum:
            - link
          type: string
          description: Section type - 'link'
          example: link
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        extension:
          title: Extension
          type: string
          description: 'Url extension, null if not a file.'
        text:
          title: Text
          type: string
          description: Alt text of a link.
          default: ''
        description:
          title: Description
          type: string
          description: Link description.
    ListNotifications:
      title: ListNotifications
      required:
        - total_items
        - current_date
        - total_pages
      type: object
      properties:
        total_items:
          title: Total Items
          type: integer
        current_date:
          title: Current Date
          type: string
          format: date-time
        total_pages:
          title: Total Pages
          type: integer
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    ListSection:
      title: ListSection
      required:
        - type
      type: object
      properties:
        type:
          title: Type
          enum:
            - list
          type: string
          description: Section type - 'list'
          example: list
        items:
          title: Items
          type: array
          items:
            type: string
        style:
          title: Style
          type: string
          description: CSS list style type
          default: disc
    MatrixRoom:
      title: MatrixRoom
      required:
        - room_id
      type: object
      properties:
        room_id:
          title: Room Id
          type: string
        last_updated_at:
          title: Last Updated At
          type: string
          format: date-time
        messages_count:
          title: Messages Count
          type: integer
          default: 0
    MediaFilterEnum:
      title: MediaFilterEnum
      enum:
        - none
        - video
        - audio
        - video|audio
        - video+audio
      type: string
      description: An enumeration.
    MediaRenderItem:
      title: MediaRenderItem
      required:
        - original_language
        - publication_date
      type: object
      properties:
        media_type:
          allOf:
            - $ref: '#/components/schemas/MediaTypes'
          description: Determines type of media file.
          default: video
          example: video
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Streaming url used for the player
          format: uri
          example: 'https://some.website/media.mp4'
        thumbnail:
          title: Thumbnail
          allOf:
            - $ref: '#/components/schemas/Thumbnail'
          description: Url to the thumbnail of the media
          example: 'https://some.website/article/thumb.jpg'
        original_language:
          title: Original Language
          type: string
          description: Media original language
          example: en
        language:
          title: Language
          type: string
          description: 'If the media is translated, this is the current requested language'
          example: en
        caption:
          title: Caption
          type: string
          description: Caption of the media
          example: This video shows a tutorial
        aspect_ratio:
          title: Aspect Ratio
          type: number
          description: Aspect ratio for the video
          example: 1.7
        author:
          title: Author
          type: string
          description: Name of the author of the media
          example: Some Author
        publication_date:
          title: Publication Date
          type: string
          description: Datetime of media publication
          format: date-time
          example: '2020-07-08T20:50:43Z'
        modification_date:
          title: Modification Date
          type: string
          description: Datetime of media modification
          format: date-time
          example: '2020-07-08T20:50:43Z'
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of media expiration
          format: date-time
          example: '2020-07-08T20:50:43Z'
        duration:
          title: Duration
          type: integer
          description: Duration of the media in seconds
          example: 120
        subtitles:
          title: Subtitles
          allOf:
            - $ref: '#/components/schemas/Subtitles'
          description: Object with both translation and trascription of the media.
          example: >-
            {'translation': 'https://file.srt', 'transcription':
            'https://file.srt' }
    MediaSection:
      title: MediaSection
      required:
        - type
        - url
        - publication_date
      type: object
      properties:
        type:
          title: Type
          enum:
            - media
          type: string
          description: Section type - 'media'
          example: media
        id:
          title: Id
          type: string
          description: Provider internal id of the media
          example: media_id
        media_type:
          allOf:
            - $ref: '#/components/schemas/MediaTypes'
          description: Determines type of media file.
          default: video
          example: video
        status:
          allOf:
            - $ref: '#/components/schemas/MediaStatuses'
          description: '[Internally used] Determines the state of requested video'
          default: READY
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the media. The only one that is required
          format: uri
          example: 'https://some.website/media.mp4'
        processed_url:
          title: Processed Url
          maxLength: 2083
          minLength: 1
          type: string
          description: '[Internally used] used for the player'
          format: uri
          example: 'https://some.website/media.mp4'
        streaming_url:
          title: Streaming Url
          maxLength: 2083
          minLength: 1
          type: string
          description: '[Internally used] streaming url used for the player'
          format: uri
          example: 'https://some.website/media.mp4'
        thumbnail:
          title: Thumbnail
          anyOf:
            - $ref: '#/components/schemas/Thumbnail'
            - maxLength: 2083
              minLength: 1
              type: string
              format: uri
          description: Url to the thumbnail of the media
          example: >-
            {'url': 'https://some.website/article/thumb.jpg', 'clearance':
            'unknown'}
        original_language:
          title: Original Language
          type: string
          description: Media original language
          default: zx
          example: en
        language:
          title: Language
          type: string
          description: >-
            [Internally used] If the media is translated, this is the current
            requested language
          example: en
        caption:
          title: Caption
          type: string
          description: Caption of the media
          example: This video shows a tutorial
        aspect_ratio:
          title: Aspect Ratio
          type: number
          description: Aspect ratio for the video
          example: 1.7
        author:
          title: Author
          type: string
          description: Name of the author of the media
          example: Some Author
        editor:
          title: Editor
          allOf:
            - $ref: '#/components/schemas/User'
          description: The editor
          example: '{''id'': ''1234567'', ''name'': ''Pawel Glimos''}'
        rights_clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          description: Rights clearence for media
          default: unknown
        rights_locked:
          title: Rights Locked
          type: boolean
          description: Indicates whether the rights_clearance flag can be changed.
          default: false
        publication_date:
          title: Publication Date
          type: string
          description: Datetime of media publication
          format: date-time
          example: '2020-07-08T20:50:43Z'
        modification_date:
          title: Modification Date
          type: string
          description: Datetime of media modification
          format: date-time
          example: '2020-07-08T20:50:43Z'
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of media expiration
          format: date-time
          example: '2020-07-08T20:50:43Z'
        duration:
          title: Duration
          type: integer
          description: Duration of the media in seconds
          example: 120
        media_size:
          title: Media Size
          type: number
          description: Size of the media in megabytes
          example: 12.2
        is_live:
          title: Is Live
          type: boolean
          description: Determines whether media is live
          example: true
        subtitles:
          title: Subtitles
          allOf:
            - $ref: '#/components/schemas/Subtitles'
          description: Object with both translation and trascription of the media.
          example: >-
            {'translation': 'https://file.srt', 'transcription':
            'https://file.srt' }
        audiovox_job:
          title: Audiovox Job
          allOf:
            - $ref: '#/components/schemas/AudiovoxJob'
          description: '[Internally used] Audiovox job object'
          example: '{''name'': ''funny-walrus'', ''id'': ''60b4c938c7d78f133df59f52''}'
        summary:
          title: Summary
          type: string
          description: Summary of the transcription
    MediaStatuses:
      title: MediaStatuses
      enum:
        - READY
        - DOWNLOADING
        - TRANSCRIBING
        - TRANSLATING
        - TRANSCODING
        - ERROR
      type: string
      description: An enumeration.
    MediaTranslationPut:
      title: MediaTranslationPut
      required:
        - pos
        - render_type
      type: object
      properties:
        pos:
          title: Pos
          type: integer
          description: Position of the section to add translation
          example: '1'
        render_type:
          allOf:
            - $ref: '#/components/schemas/RenderTypeEnum'
          description: Determines if user wants to revoice or use subtitles in translation
          example: revoice
        revoice_type:
          allOf:
            - $ref: '#/components/schemas/RenderVoiceEnum'
          description: Class of voice use during revoicing the media.
          default: w
          example: w
    MediaTypes:
      title: MediaTypes
      enum:
        - video
        - audio
      type: string
      description: An enumeration.
    Message:
      title: Message
      required:
        - id
        - msgtype
        - sender
        - body
        - created_at
      type: object
      properties:
        id:
          title: Id
          type: string
        msgtype:
          title: Msgtype
          type: string
          description: Matrix message type
        sender:
          title: Sender
          type: string
          description: Matrix id of sender user.
        body:
          title: Body
          type: string
          description: Message's content.
        formatted_body:
          title: Formatted Body
          type: string
          description: Message's formatted content
        url:
          title: Url
          type: string
          description: Optional image url
        created_at:
          title: Created At
          type: string
    Metadata:
      title: Metadata
      type: object
      properties:
        hits_total:
          title: Hits Total
          type: integer
          default: 0
        displays_total:
          title: Displays Total
          type: integer
          default: 0
        hits:
          title: Hits
          type: integer
          default: 0
        displays:
          title: Displays
          type: integer
          default: 0
    MetadataSection:
      title: MetadataSection
      required:
        - type
        - text
      type: object
      properties:
        type:
          title: Type
          enum:
            - metadata
          type: string
          description: Section type - metadata
          example: metadata
        text:
          title: Text
          type: string
          description: Metadata body
    NewDraftBody:
      title: NewDraftBody
      required:
        - article_id
        - organisation
        - version_id
      type: object
      properties:
        article_id:
          title: Article Id
          type: string
        organisation:
          title: Organisation
          type: string
        version_id:
          title: Version Id
          type: string
    NewsdeckColumn:
      title: NewsdeckColumn
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Column id - created on the frontend
        title:
          title: Title
          type: string
          description: Title of the column
        type:
          allOf:
            - $ref: '#/components/schemas/NewsdeckColumnTypeEnum'
          description: The type of the column
          default: articles
        filters:
          title: Filters
          type: object
          description: Column filters
    NewsdeckColumnTypeEnum:
      title: NewsdeckColumnTypeEnum
      enum:
        - articles
        - topics
        - editorial_selections
        - favourites
      type: string
      description: An enumeration.
    NewsdeckColumnUpdate:
      title: NewsdeckColumnUpdate
      required:
        - id
        - position
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Column id - created on the frontend
        title:
          title: Title
          type: string
          description: Title of the column
        type:
          allOf:
            - $ref: '#/components/schemas/NewsdeckColumnTypeEnum'
          description: The type of the column
          default: articles
        position:
          title: Position
          type: integer
          description: Position of the column
        filters:
          title: Filters
          type: object
          description: Column filters
    NewsdeckConfig:
      title: NewsdeckConfig
      required:
        - user_id
      type: object
      properties:
        user_id:
          title: User Id
          type: string
          description: The owner of the config
        theme:
          allOf:
            - $ref: '#/components/schemas/NewsdeckThemeEnum'
          description: Theme of the Newsdeck
          default: light
        columns:
          title: Columns
          type: array
          items:
            $ref: '#/components/schemas/NewsdeckColumn'
          description: The Newsdeck Columns
    NewsdeckConfigResponse:
      title: NewsdeckConfigResponse
      type: object
      properties:
        user_id:
          title: User Id
          type: string
          description: The owner of the config
        theme:
          allOf:
            - $ref: '#/components/schemas/NewsdeckThemeEnum'
          description: Theme of the Newsdeck
          default: light
        columns:
          title: Columns
          type: array
          items:
            $ref: '#/components/schemas/NewsdeckColumnUpdate'
          description: The Newsdeck Columns
    NewsdeckThemeEnum:
      title: NewsdeckThemeEnum
      enum:
        - light
        - dark
      type: string
      description: An enumeration.
    Notification:
      title: Notification
      type: object
      properties:
        _id:
          title: ' Id'
          type: string
          description: MongoDB internal id
          example: ObjectId('616e9314a4a552f3345ee88e')
        type:
          allOf:
            - $ref: '#/components/schemas/NotificationTypeEnum'
          description: Type of the notification.
          default: c
          example: c
        user:
          title: User
          allOf:
            - $ref: '#/components/schemas/User'
          description: Original requester
          example:
            id: '123'
            name: John Doe
            email: doe@ebu.ch
        organisation:
          title: Organisation
          type: string
          description: Organisation
          example: ZZEBU
        article:
          title: Article
          allOf:
            - $ref: '#/components/schemas/NotificationArticle'
          description: Article's data
        version_id:
          title: Version Id
          type: string
          description: Article's version.
        date:
          title: Date
          type: string
          description: Creation date.
          format: date-time
        content:
          title: Content
          type: string
          description: Content of the notification
        is_draft:
          title: Is Draft
          type: boolean
          description: Is notification dedicated for draft.
          default: false
      description: Model for all kind of notifications and requests
    NotificationArticle:
      title: NotificationArticle
      required:
        - id
        - organisation
        - title
      type: object
      properties:
        id:
          title: Id
          type: string
        organisation:
          title: Organisation
          type: string
        title:
          title: Title
          type: string
    NotificationIn:
      title: NotificationIn
      required:
        - organisation
        - article_id
        - version_id
      type: object
      properties:
        organisation:
          title: Organisation
          type: string
        article_id:
          title: Article Id
          type: string
        version_id:
          title: Version Id
          type: string
    NotificationMediaIn:
      title: NotificationMediaIn
      required:
        - organisation
        - article_id
        - version_id
        - user_id
        - user_name
        - user_email
        - type
      type: object
      properties:
        organisation:
          title: Organisation
          type: string
        article_id:
          title: Article Id
          type: string
        version_id:
          title: Version Id
          type: string
        user_id:
          title: User Id
          type: string
        user_name:
          title: User Name
          type: string
        user_email:
          title: User Email
          type: string
        type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        is_draft:
          title: Is Draft
          type: boolean
          default: false
    NotificationTypeEnum:
      title: NotificationTypeEnum
      enum:
        - c
        - w
        - cl
        - mtr
        - str
        - er
        - ger
        - a_i
        - a_w
        - a_c
      type: string
      description: An enumeration.
    OpenAIModel:
      title: OpenAIModel
      enum:
        - gpt-3.5-turbo
        - gpt-3.5-turbo-preview
        - gpt-4
        - gpt-4-preview
      type: string
      description: An enumeration.
    Organisation:
      title: Organisation
      required:
        - name
        - pilot_ids
        - codopses
        - allowed_reco_sources
        - fallback
      type: object
      properties:
        _id:
          title: ' Id'
          type: string
          description: MongoDB internal id
          example: ObjectId('616e9314a4a552f3345ee88e')
        name:
          title: Name
          type: string
          description: Organisation name
          example: European Broadcast Union
        country_origin:
          title: Country Origin
          type: string
          description: Country of origin
          example: France
        country_origin_code:
          title: Country Origin Code
          type: string
          description: Country of origin code
          example: fr
        pilot_ids:
          title: Pilot Ids
          type: array
          items:
            type: string
          description: List of pilot ids
        codopses:
          title: Codopses
          type: array
          items:
            type: string
          description: Organisation CODOPSes
        allowed_reco_sources:
          title: Allowed Reco Sources
          type: array
          items:
            type: string
          description: List of organisations that can be recommended
        allowed_reco_themes:
          type: array
          items:
            $ref: '#/components/schemas/RecoBoxTheme'
          description: List of colour schemes that can be used
          default:
            - blue
            - black
            - green
            - qatar2022
            - esc2024
        fallback:
          title: Fallback
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        pilot_allowed:
          title: Pilot Allowed
          type: boolean
          description: If organisation is allowed to access the news pilot
          default: false
        erb_allowed:
          title: Erb Allowed
          type: boolean
          description: If organisation is allowed to access the erb
          default: false
        eurovox_allowed:
          title: Eurovox Allowed
          type: boolean
          description: If organisation is allowed to access the eurovox
          default: false
        exchange_allowed:
          title: Exchange Allowed
          type: boolean
          description: If organisation has the access to news exchange content
          default: false
        reco_data:
          title: Reco Data
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RecoData'
          description: Data used for recommendation boxes
        timezone:
          title: Timezone
          type: string
          description: Organisation timezone
        sharing_enabled:
          title: Sharing Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
          default: false
        matrix_room_id:
          title: Matrix Room Id
          type: string
        social:
          title: Social
          type: boolean
          description: Is given source coming from social networks.
          default: false
    OrganisationUpdate:
      title: OrganisationUpdate
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Organisation name
          example: European Broadcast Union
        pilot_ids:
          title: Pilot Ids
          type: array
          items:
            type: string
          description: List of pilot ids
        codopses:
          title: Codopses
          type: array
          items:
            type: string
          description: Organisation CODOPSes
        allowed_reco_sources:
          title: Allowed Reco Sources
          type: array
          items:
            type: string
          description: List of organisations that can be recommended
        allowed_reco_themes:
          type: array
          items:
            $ref: '#/components/schemas/RecoBoxTheme'
          description: List of colour schemes that can be used
        fallback:
          title: Fallback
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        pilot_allowed:
          title: Pilot Allowed
          type: boolean
          description: If organisation is allowed to access the news pilot
        erb_allowed:
          title: Erb Allowed
          type: boolean
          description: If organisation is allowed to access the erb
        eurovox_allowed:
          title: Eurovox Allowed
          type: boolean
          description: If organisation is allowed to access the eurovox
        reco_data:
          title: Reco Data
          type: object
          description: Data used for recommendation boxes
        timezone:
          title: Timezone
          type: string
          description: Reco box date format
        sharing_enabled:
          title: Sharing Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
          default: false
        country_origin:
          title: Country Origin
          type: string
          description: Country origin name
        country_origin_code:
          title: Country Origin Code
          type: string
          description: Country origin code
    OriginEnum:
      title: OriginEnum
      enum:
        - original
        - original_edited
        - machine_translated
        - edited
      type: string
      description: The origins that we support
    PSACriterion:
      title: PSACriterion
      required:
        - name
        - description
        - uuid
        - max_value
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        uuid:
          title: Uuid
          type: string
        min_value:
          title: Min Value
          type: integer
          default: 0
        max_value:
          title: Max Value
          type: integer
        gpt_description:
          title: Gpt Description
          type: string
          default: ''
    PSAValue:
      title: PSAValue
      required:
        - uuid
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          description: Criterion identifier.
        value:
          title: Value
          type: integer
          description: User input value.
        user_id:
          title: User Id
          type: string
          description: User keycloak identifier.
        reason:
          title: Reason
          type: string
          description: If gpt was used - reason for assessment
        prompt_id:
          title: Prompt Id
          type: string
          description: If gpt was used - prompt id
    PSAValueInsert:
      title: PSAValueInsert
      required:
        - uuid
        - value
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
        value:
          title: Value
          type: integer
    PaginatedArticleDiscussions:
      title: PaginatedArticleDiscussions
      type: object
      properties:
        total_items:
          title: Total Items
          type: integer
          default: 0
        total_pages:
          title: Total Pages
          type: integer
          default: 0
        current_page:
          title: Current Page
          type: integer
          default: 0
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/ArticleDiscussion'
    PaginatedSeriesList:
      title: PaginatedSeriesList
      required:
        - items
        - total_items
        - total_pages
      type: object
      properties:
        current_date:
          title: Current Date
          type: string
          format: date-time
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/SimplifiedSeries'
        total_items:
          title: Total Items
          type: integer
        total_pages:
          title: Total Pages
          type: integer
    PatternTopicModeEnum:
      title: PatternTopicModeEnum
      enum:
        - frequency
        - length
      type: string
      description: An enumeration.
    PdfInput:
      title: PdfInput
      type: object
      properties:
        html:
          title: Html
          type: string
        remote_url:
          title: Remote Url
          type: string
        paper_width:
          title: Paper Width
          type: number
        paper_height:
          title: Paper Height
          type: number
        margin_top:
          title: Margin Top
          type: number
        margin_bottom:
          title: Margin Bottom
          type: number
        margin_left:
          title: Margin Left
          type: number
        margin_right:
          title: Margin Right
          type: number
        prefer_css_page_size:
          title: Prefer Css Page Size
          type: boolean
        landscape:
          title: Landscape
          type: boolean
        scale:
          title: Scale
          type: number
    PeachAlgorithm:
      title: PeachAlgorithm
      enum:
        - labse
      type: string
      description: An enumeration.
    ProcessedJobStatusEnum:
      title: ProcessedJobStatusEnum
      enum:
        - success
        - error
      type: string
      description: An enumeration.
    PromptType:
      title: PromptType
      enum:
        - chat
        - psa
        - search
      type: string
      description: An enumeration.
    PublicServiceAlgorithmValues:
      title: PublicServiceAlgorithmValues
      type: object
      properties:
        cross_border_relevance:
          title: Cross Border Relevance
          type: integer
        forward_looking:
          title: Forward Looking
          type: integer
        diverse_voices:
          title: Diverse Voices
          type: integer
        analysis_explanation:
          title: Analysis Explanation
          type: integer
    PublicationsBoxSummaryData:
      title: PublicationsBoxSummaryData
      type: object
      properties:
        total_published:
          title: Total Published
          type: integer
          default: 0
        total_sources:
          title: Total Sources
          type: integer
          default: 0
        hits:
          title: Hits
          type: integer
          default: 0
        displays:
          title: Displays
          type: integer
          default: 0
    PushNotificationBody:
      title: PushNotificationBody
      required:
        - receiver
      type: object
      properties:
        receiver:
          title: Receiver
          type: string
        content:
          title: Content
          type: string
    PushSubscriptionCreate:
      title: PushSubscriptionCreate
      required:
        - subscription_data
      type: object
      properties:
        subscription_data:
          title: Subscription Data
          type: object
          description: Subscription data
        preferences:
          title: Preferences
          allOf:
            - $ref: '#/components/schemas/PushSubscriptionOptions'
          description: User preferences
          default:
            chat_channel_mentions: false
            chat_user_mentions: false
            chat_direct_messages: false
            video_translation_finished: false
    PushSubscriptionOptions:
      title: PushSubscriptionOptions
      type: object
      properties:
        chat_channel_mentions:
          title: Chat Channel Mentions
          type: boolean
          description: 'Allow notifications @channel, @here'
          default: false
        chat_user_mentions:
          title: Chat User Mentions
          type: boolean
          description: Allow notifications @username
          default: false
        chat_direct_messages:
          title: Chat Direct Messages
          type: boolean
          description: Allow notifications direct messages
          default: false
        video_translation_finished:
          title: Video Translation Finished
          type: boolean
          description: Allow notifications video finished translating
          default: false
    QueryOperatorEnum:
      title: QueryOperatorEnum
      enum:
        - AND
        - OR
      type: string
      description: An enumeration.
    QuoteSection:
      title: QuoteSection
      required:
        - type
        - text
      type: object
      properties:
        type:
          title: Type
          enum:
            - quote
          type: string
          description: Section type - 'quote'
          example: quote
        text:
          title: Text
          type: string
          description: Body of the quote
          example: To be or not to be
        author:
          title: Author
          type: string
          description: Name of the author of the quote
          example: Shakespeare
    RecoBox:
      title: RecoBox
      required:
        - title
        - codops
        - author
        - recommendations
        - configuration
        - edited_by
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          description: Automatically generated uuid
        name:
          title: Name
          type: string
          description: Unique per organisation name - by default set to 'RecoBox + id'
          example: Wolfs
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Box language for title and automatic recommendations
          default: en
          example: en
        title:
          title: Title
          type: string
          description: Title that is displayed when box is rendered
          example: Reco by EBU
        description:
          title: Description
          type: string
          description: Reco box description
          example: Reco is a project allowing to reco..
        codops:
          title: Codops
          type: string
          description: Organisation CODOPS
          example: ZZEBU
        creation_date:
          title: Creation Date
          type: string
          description: RecoBox creation time
          format: date-time
        publication_date:
          title: Publication Date
          type: string
          description: When should the recobox be published
          format: date-time
        modification_date:
          title: Modification Date
          type: string
          description: RecoBox modification time
          format: date-time
        expiration_date:
          title: Expiration Date
          type: string
          description: When should the recobox should stop being published
          format: date-time
        author:
          title: Author
          allOf:
            - $ref: '#/components/schemas/User'
          description: The creator of the recommendation box
          example: '{''id'': ''1234567'', ''name'': ''Pawel Glimos''}'
        recommendations:
          title: Recommendations
          type: array
          items:
            $ref: '#/components/schemas/RecoItem'
          description: List of articles to recommend
        configuration:
          title: Configuration
          allOf:
            - $ref: '#/components/schemas/RecoBoxConfiguration'
          description: Configuration parameters of the RecoBox
        system:
          title: System
          type: boolean
          description: If box is a system box
          default: false
        state:
          allOf:
            - $ref: '#/components/schemas/BoxStateEnum'
          description: Publication state of a RecoBox - unpublished/draft/published
          default: unpublished
        locked:
          title: Locked
          type: boolean
          description: If box can be edited
          default: false
        shuffle:
          title: Shuffle
          type: boolean
          description: Whether item results should be shuffled
          default: false
        sharing_enabled:
          title: Sharing Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
          default: false
        automatic_box_enabled:
          title: Automatic Box Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
          default: false
        editorial_selection:
          title: Editorial Selection
          type: boolean
          description: Whether the box is editorial selection
          default: false
        edited_by:
          title: Edited By
          type: array
          items:
            $ref: '#/components/schemas/EditLog'
    RecoBoxColourScheme:
      title: RecoBoxColourScheme
      enum:
        - automatic
        - light
        - dark
      type: string
      description: An enumeration.
    RecoBoxConfiguration:
      title: RecoBoxConfiguration
      type: object
      properties:
        target:
          allOf:
            - $ref: '#/components/schemas/RecoBoxTarget'
          description: How should items be opened
          default: default
        style:
          title: Style
          type: string
          description: Reco box CSS styling
        colour_scheme:
          allOf:
            - $ref: '#/components/schemas/RecoBoxColourScheme'
          description: Colour scheme of a box
          default: automatic
        theme:
          title: Theme
          type: string
          description: Theme of a box
          default: blue
        template:
          allOf:
            - $ref: '#/components/schemas/RecoBoxTemplate'
          description: Template of a box
          default: default
        layout_mode:
          allOf:
            - $ref: '#/components/schemas/RecoBoxLayout'
          description: Layout of a box
          default: automatic
        algorithm:
          allOf:
            - $ref: '#/components/schemas/PeachAlgorithm'
          description: Recommendation algorithm to use with peach
        algorithm_params:
          title: Algorithm Params
          type: object
          description: Parameters for the recommendation algorithm
    RecoBoxLayout:
      title: RecoBoxLayout
      enum:
        - automatic
        - desktop
        - mobile
      type: string
      description: An enumeration.
    RecoBoxListItem:
      title: RecoBoxListItem
      required:
        - title
        - codops
        - author
        - recommendations
        - configuration
        - edited_by
        - organisation
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          description: Automatically generated uuid
        name:
          title: Name
          type: string
          description: Unique per organisation name - by default set to 'RecoBox + id'
          example: Wolfs
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Box language for title and automatic recommendations
          default: en
          example: en
        title:
          title: Title
          type: string
          description: Title that is displayed when box is rendered
          example: Reco by EBU
        description:
          title: Description
          type: string
          description: Reco box description
          example: Reco is a project allowing to reco..
        codops:
          title: Codops
          type: string
          description: Organisation CODOPS
          example: ZZEBU
        creation_date:
          title: Creation Date
          type: string
          description: RecoBox creation time
          format: date-time
        publication_date:
          title: Publication Date
          type: string
          description: When should the recobox be published
          format: date-time
        modification_date:
          title: Modification Date
          type: string
          description: RecoBox modification time
          format: date-time
        expiration_date:
          title: Expiration Date
          type: string
          description: When should the recobox should stop being published
          format: date-time
        author:
          title: Author
          allOf:
            - $ref: '#/components/schemas/User'
          description: The creator of the recommendation box
          example: '{''id'': ''1234567'', ''name'': ''Pawel Glimos''}'
        recommendations:
          title: Recommendations
          type: array
          items:
            $ref: '#/components/schemas/RecoItem'
          description: List of articles to recommend
        configuration:
          title: Configuration
          allOf:
            - $ref: '#/components/schemas/RecoBoxConfiguration'
          description: Configuration parameters of the RecoBox
        system:
          title: System
          type: boolean
          description: If box is a system box
          default: false
        state:
          allOf:
            - $ref: '#/components/schemas/BoxStateEnum'
          description: Publication state of a RecoBox - unpublished/draft/published
          default: unpublished
        locked:
          title: Locked
          type: boolean
          description: If box can be edited
          default: false
        shuffle:
          title: Shuffle
          type: boolean
          description: Whether item results should be shuffled
          default: false
        sharing_enabled:
          title: Sharing Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
          default: false
        automatic_box_enabled:
          title: Automatic Box Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
          default: false
        editorial_selection:
          title: Editorial Selection
          type: boolean
          description: Whether the box is editorial selection
          default: false
        edited_by:
          title: Edited By
          type: array
          items:
            $ref: '#/components/schemas/EditLog'
        organisation:
          title: Organisation
          type: string
          description: Pilot organisation mapped from the codops
          example: EBU
    RecoBoxLocation:
      title: RecoBoxLocation
      required:
        - url
        - views
      type: object
      properties:
        url:
          title: Url
          type: string
          description: Url to the location
          example: 'https://some.website/article.html'
        views:
          title: Views
          type: integer
          description: Number of Views in the location
          example: '10'
    RecoBoxOverviewItem:
      title: RecoBoxOverviewItem
      required:
        - uuid
        - organisation
        - state
        - creation_date
        - modification_date
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          description: Automatically generated uuid
        organisation:
          title: Organisation
          type: string
          description: Pilot organisation mapped from the codops
          example: EBU
        state:
          allOf:
            - $ref: '#/components/schemas/BoxStateEnum'
          description: Publication state of a RecoBox - unpublished/draft/published
        creation_date:
          title: Creation Date
          type: string
          description: RecoBox creation time
          format: date-time
        publication_date:
          title: Publication Date
          type: string
          description: RecoBox scheduled publication time
          format: date-time
        expiration_date:
          title: Expiration Date
          type: string
          description: RecoBox scheduled expiration time
          format: date-time
        modification_date:
          title: Modification Date
          type: string
          description: RecoBox modification time
          format: date-time
    RecoBoxRender:
      title: RecoBoxRender
      required:
        - organisation
        - title
        - view_original
        - footer
        - next_item
        - previous_item
        - items
        - configuration
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          description: Automatically generated uuid
        organisation:
          title: Organisation
          type: string
          description: The organisation of the box owner
        name:
          title: Name
          type: string
          description: Unique per organisation name - by default set to 'RecoBox + id'
          example: Wolfs
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Box language for title and automatic recommendations
          default: en
          example: en
        title:
          title: Title
          type: string
          description: Title that is displayed when box is rendered
          example: Reco by EBU
        description:
          title: Description
          type: string
          description: Reco box description
          example: Reco by EBU
        view_original:
          title: View Original
          type: string
          description: View original article text - translated
          example: View original
        footer:
          title: Footer
          type: string
          description: Footer that is displayed when box is rendered
          example: By Eurovision
        next_item:
          title: Next Item
          type: string
          description: Footer that is displayed when box is rendered
          example: By Eurovision
        previous_item:
          title: Previous Item
          type: string
          description: Footer that is displayed when box is rendered
          example: By Eurovision
        state:
          allOf:
            - $ref: '#/components/schemas/BoxStateEnum'
          description: Publication state of a RecoBox - unpublished/draft/published
          default: unpublished
        shuffle:
          title: Shuffle
          type: boolean
          description: Whether item results should be shuffled
          default: false
        is_automatic:
          title: Is Automatic
          type: boolean
          description: Whether box is automatic article overlay box
          default: false
        sharing_enabled:
          title: Sharing Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
          default: false
        automatic_box_enabled:
          title: Automatic Box Enabled
          type: boolean
          description: Whether automatic box should be enabled
          default: false
        editorial_selection:
          title: Editorial Selection
          type: boolean
          description: Whether the box is editorial selection
          default: false
        current_date:
          title: Current Date
          type: string
          description: Render creation time
          format: date-time
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/RecoItemRender'
          description: List of articles to recommend
        configuration:
          title: Configuration
          allOf:
            - $ref: '#/components/schemas/RecoBoxConfiguration'
          description: Configuration parameters of the RecoBox
    RecoBoxRetitle:
      title: RecoBoxRetitle
      required:
        - title
        - organisation
        - article_id
        - version_id
      type: object
      properties:
        title:
          title: Title
          type: string
        organisation:
          title: Organisation
          type: string
        article_id:
          title: Article Id
          type: string
        version_id:
          title: Version Id
          type: string
        item_publication_date:
          title: Item Publication Date
          type: string
          description: Scheduled publication date
          format: date-time
        item_expiration_date:
          title: Item Expiration Date
          type: string
          description: Scheduled expiration date
          format: date-time
        automatic_box_enabled:
          title: Automatic Box Enabled
          type: boolean
          default: false
    RecoBoxStats:
      title: RecoBoxStats
      required:
        - organisation
      type: object
      properties:
        organisation:
          title: Organisation
          type: string
          description: RecoBox organisation
        collection_displayed:
          title: Collection Displayed
          type: integer
          description: RecoBox number of displays
        collection_item_displayed:
          title: Collection Item Displayed
          type: integer
          description: RecoBox item displays
        collection_hit:
          title: Collection Hit
          type: integer
          description: RecoBox item hits
    RecoBoxTarget:
      title: RecoBoxTarget
      enum:
        - default
        - original_blank
        - original_same
        - nothing
        - tab
      type: string
      description: An enumeration.
    RecoBoxTemplate:
      title: RecoBoxTemplate
      enum:
        - default
        - default_v2
        - single
        - double
        - playlist
      type: string
      description: An enumeration.
    RecoBoxTheme:
      title: RecoBoxTheme
      enum:
        - blue
        - black
        - green
        - srg
        - red
        - qatar2022
        - esc2024
      type: string
      description: An enumeration.
    RecoBoxUpdate:
      title: RecoBoxUpdate
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Unique per organisation name - by default set to 'RecoBox + id'
          example: Wolfs
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Box language for title and automatic recommendations
          example: en
        title:
          title: Title
          type: string
          description: Title that is displayed when box is rendered
          example: Reco by EBU
        description:
          title: Description
          type: string
          description: Reco box description
          example: Reco is a project allowing to reco..
        publication_date:
          title: Publication Date
          type: string
          description: When should the recobox be published
          format: date-time
        expiration_date:
          title: Expiration Date
          type: string
          description: When should the recobox should stop being published
          format: date-time
        recommendations:
          title: Recommendations
          type: array
          items:
            $ref: '#/components/schemas/RecoItem'
          description: List of articles to recommend
        configuration:
          title: Configuration
          allOf:
            - $ref: '#/components/schemas/RecoBoxConfiguration'
          description: Configuration parameters of the RecoBox
        state:
          allOf:
            - $ref: '#/components/schemas/BoxStateEnum'
          description: Publication state of a RecoBox - unpublished/draft/published
        shuffle:
          title: Shuffle
          type: boolean
          description: Whether item results should be shuffled
        locked:
          title: Locked
          type: boolean
          description: If box can be edited
        editorial_selection:
          title: Editorial Selection
          type: boolean
          description: Whether the box is editorial selection
        sharing_enabled:
          title: Sharing Enabled
          type: boolean
          description: Whether sharing capabilities should be enabled
        automatic_box_enabled:
          title: Automatic Box Enabled
          type: boolean
          description: Whether automatic box should be enabled
    RecoData:
      title: RecoData
      type: object
      properties:
        title_prefix:
          title: Title Prefix
          type: string
          description: Reco box title prefix
          default: A European Perspective
        footer:
          title: Footer
          type: string
          description: Reco box footer
          default: 'Brought to you by ##EUROVISION##'
        view_original:
          title: View Original
          type: string
          description: Reco box link to original
          default: View original article
        ai_disclaimer:
          title: Ai Disclaimer
          type: string
          description: Reco box link to original
          default: ''
        next_item:
          title: Next Item
          type: string
          description: Next item in article browser
          default: Next
        previous_item:
          title: Previous Item
          type: string
          description: Previous item in article browser
          default: Previous
        clipboard:
          title: Clipboard
          type: string
          description: Copy to clipboard message
          default: Copied to clipboard!
        article_missing:
          title: Article Missing
          type: string
          description: Copy to clipboard message
          default: 'Oops! This news story is no longer here, but we have others for you'
        adapted_by:
          title: Adapted By
          type: string
          description: Lower text for social media sharing
          default: Adapted and translated by
        originally_published:
          title: Originally Published
          type: string
          description: Higher text for social media sharing
          default: Originally published by
        image_restricted_text:
          title: Image Restricted Text
          type: string
          description: Text which be displayed in place of restricted ImageSection.
          default: Image can not be shown due to copy rights restrictions.
        date_format:
          title: Date Format
          type: string
          description: Custom dateformat for given reco language
          default: 'dd MMMM yyyy hh:mm ZZZZ'
        article_date_format:
          title: Article Date Format
          type: string
          description: Custom dateformat for given reco language
          default: 'dd MMMM yyyy hh:mm ZZZZ'
        overlay_recobox_id:
          title: Overlay Recobox Id
          type: string
          description: Id of overlay box
          default: ''
    RecoItem:
      title: RecoItem
      required:
        - item_id
        - item_org
        - item_version
      type: object
      properties:
        item_id:
          title: Item Id
          type: string
          description: Id of the article to recommend
          example: article_id
        item_org:
          title: Item Org
          type: string
          description: The article's organisation
          example: BBC
        item_version:
          title: Item Version
          type: string
          description: The article's version
          example: article_version
        item_publication_date:
          title: Item Publication Date
          type: string
          description: Scheduled publication date
          format: date-time
        item_expiration_date:
          title: Item Expiration Date
          type: string
          description: Scheduled expiration date
          format: date-time
        automatic_box_enabled:
          title: Automatic Box Enabled
          type: boolean
          description: If auto box should be displayed under the article
          default: false
    RecoItemRender:
      title: RecoItemRender
      required:
        - id
        - organisation
        - version_id
        - original_language
        - language
        - publication_date
        - url
        - title
        - lead
        - contains_media
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Internal provider id
          example: article_id
        organisation:
          title: Organisation
          type: string
          description: Provider organization name
          example: BBC
        version_id:
          title: Version Id
          type: string
          description: Id of the version used to create article
          example: 12312-12332
        original_language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article original language
          example: en
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Item Language
          example: en
        publication_date:
          title: Publication Date
          anyOf:
            - type: string
            - type: string
              format: date-time
          description: Datetime of article publication
          example: '2020-07-08T20:50:43Z'
        expiration_date:
          title: Expiration Date
          anyOf:
            - type: string
            - type: string
              format: date-time
          description: Datetime of article expiration
          example: '2020-07-08T20:50:43Z'
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        title:
          title: Title
          type: string
          description: The title of the article
        lead:
          title: Lead
          type: string
          description: The lead text of the article
        longest_media_duration:
          title: Longest Media Duration
          type: integer
          description: Duration of the longest media section
        contains_media:
          title: Contains Media
          type: boolean
          description: True if any of the article sections is of media type
        contains_audio:
          title: Contains Audio
          type: boolean
          description: True if any of the article sections contain audio
        contains_video:
          title: Contains Video
          type: boolean
          description: True if any of the article sections contain video
        thumbnail:
          title: Thumbnail
          anyOf:
            - $ref: '#/components/schemas/Thumbnail'
            - maxLength: 2083
              minLength: 1
              type: string
              format: uri
          description: Url to the thumbnail of the article
          example: >-
            {'url': 'https://some.website/article/thumb.jpg',
            'rights_clearance': 'approved'
        editorial_requests_count:
          title: Editorial Requests Count
          type: integer
          description: Number of editorial requests.
          default: 0
          example: 42
        score:
          title: Score
          type: number
        recoboxes_count:
          title: Recoboxes Count
          type: integer
          description: Number of recoboxes that article is included in
          default: 0
          example: 2
        metadata:
          $ref: '#/components/schemas/Metadata'
        series:
          title: Series
          type: string
          description: 'If an article is a part of a series, the series id'
        topics:
          title: Topics
          type: array
          items:
            type: string
          description: List of article topics
          hidden_from_schema: true
        summary:
          title: Summary
          type: string
          description: Article summary
        short_description:
          title: Short Description
          type: string
          description: 'If it is defined, a short description of the contents'
        timestamp:
          title: Timestamp
          type: integer
          description: timestamp field used to paginate in user history
        source:
          allOf:
            - $ref: '#/components/schemas/RecoItemSource'
          description: Source of the recommendation item
          default: algorithm
          example: algorithm
        text_rights_clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          description: Rights clearence for the text part of the article
          default: unknown
        country_code:
          title: Country Code
          type: string
          description: Country code of origin
        country_origin:
          title: Country Origin
          type: string
          description: Country of origin
        media_items:
          title: Media Items
          type: array
          items:
            $ref: '#/components/schemas/MediaRenderItem'
          description: 'If item has media, this is the list of all occurences'
        reco_item_publication_date:
          title: Reco Item Publication Date
          anyOf:
            - type: string
            - type: string
              format: date-time
          description: Scheduled publication date
        reco_item_expiration_date:
          title: Reco Item Expiration Date
          anyOf:
            - type: string
            - type: string
              format: date-time
          description: Scheduled expiration date
        automatic_box_enabled:
          title: Automatic Box Enabled
          type: boolean
          description: Whether automatic box should be enabled
          default: false
      description: Used in lists of articles
    RecoItemSource:
      title: RecoItemSource
      enum:
        - manual
        - algorithm
      type: string
      description: An enumeration.
    RenderTypeEnum:
      title: RenderTypeEnum
      enum:
        - revoice
        - subtitles
      type: string
      description: An enumeration.
    RenderVoiceEnum:
      title: RenderVoiceEnum
      enum:
        - w
        - m
      type: string
      description: An enumeration.
    RenderWarning:
      title: RenderWarning
      required:
        - text
      type: object
      properties:
        position:
          title: Position
          type: string
          description: Position where warning occured
          example: 2
        text:
          title: Text
          type: string
          description: Body of the warning
    RetitleResponse:
      title: RetitleResponse
      required:
        - article
        - reco_box
      type: object
      properties:
        article:
          $ref: '#/components/schemas/VersionedArticle'
        reco_box:
          $ref: '#/components/schemas/RecoBoxRender'
    RevoicingEnginesEnum:
      title: RevoicingEnginesEnum
      enum:
        - AZURE
        - GOOGLE
        - AWS
      type: string
      description: An enumeration.
    RightsClearance:
      title: RightsClearance
      enum:
        - cleared
        - unknown
        - restricted
        - pending_correction
      type: string
      description: An enumeration.
    RightsUpdate:
      title: RightsUpdate
      required:
        - clearance
      type: object
      properties:
        position:
          title: Position
          type: integer
          description: 'If media is updated, point to it''s position'
          example: '5'
        reason:
          title: Reason
          type: string
          description: The reason for the update
          example: Wrong data
        clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          description: Article original language
          example: restricted
        is_thumbnail:
          title: Is Thumbnail
          type: boolean
          default: false
    Role:
      title: Role
      required:
        - id
        - name
        - description
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Keycloak Role ID
          example: role_id
        name:
          title: Name
          type: string
          description: Keycloak Role Name
          example: can_have_fun
        description:
          title: Description
          type: string
          description: Keycloak Role Description
          example: Allows to have fun
    SeriesUpdate:
      title: SeriesUpdate
      type: object
      properties:
        title:
          title: Title
          type: string
          description: Title of the series
        organisation:
          title: Organisation
          type: string
          description: Organisation creating the series
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: If series has a thumbnail - the thumbnail
          format: uri
          example: 'https://some.website/thumbnail.png'
        description:
          title: Description
          type: string
          description: Short description of the series
        author:
          title: Author
          type: string
          description: Author of the series
        feed:
          title: Feed
          maxLength: 2083
          minLength: 1
          type: string
          description: If series has a dedicated feed like RSS or any other - the feed
          format: uri
          example: 'https://some.website/series.xml'
        language:
          title: Language
          type: string
          description: Language of the series
        country:
          title: Country
          type: string
          description: Country of the source of the series
        category:
          title: Category
          type: string
          description: Category series belongs to
    SharedShortLink:
      title: SharedShortLink
      required:
        - article_id
        - organisation
        - version_id
        - reco_box_uuid
        - redirect_url
      type: object
      properties:
        article_id:
          title: Article Id
          type: string
        organisation:
          title: Organisation
          type: string
        version_id:
          title: Version Id
          type: string
        reco_box_uuid:
          title: Reco Box Uuid
          type: string
        redirect_url:
          title: Redirect Url
          type: string
          description: Redirect url encoded in base64
        target:
          allOf:
            - $ref: '#/components/schemas/SharedShortLinkTarget'
          description: Where it was originally shared
          default: copy
        short:
          title: Short
          type: string
          description: Short alphanumeric link.
          default: LW05ZYPWRY
        created_at:
          title: Created At
          type: string
          format: date-time
    SharedShortLinkTarget:
      title: SharedShortLinkTarget
      enum:
        - facebook
        - twitter
        - instagram
        - tiktok
        - copy
      type: string
      description: An enumeration.
    SimplifiedArticle:
      title: SimplifiedArticle
      required:
        - id
        - organisation
        - version_id
        - original_language
        - language
        - publication_date
        - url
        - title
        - lead
        - contains_media
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Internal provider id
          example: article_id
        organisation:
          title: Organisation
          type: string
          description: Provider organization name
          example: BBC
        version_id:
          title: Version Id
          type: string
          description: Id of the version used to create article
          example: 12312-12332
        original_language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article original language
          example: en
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Item Language
          example: en
        publication_date:
          title: Publication Date
          type: string
          description: Datetime of article publication
          format: date-time
          example: '2020-07-08T20:50:43Z'
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of article expiration
          format: date-time
          example: '2020-07-08T20:50:43Z'
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        title:
          title: Title
          type: string
          description: The title of the article
        lead:
          title: Lead
          type: string
          description: The lead text of the article
        longest_media_duration:
          title: Longest Media Duration
          type: integer
          description: Duration of the longest media section
        contains_media:
          title: Contains Media
          type: boolean
          description: True if any of the article sections is of media type
        contains_audio:
          title: Contains Audio
          type: boolean
          description: True if any of the article sections contain audio
        contains_video:
          title: Contains Video
          type: boolean
          description: True if any of the article sections contain video
        thumbnail:
          title: Thumbnail
          anyOf:
            - $ref: '#/components/schemas/Thumbnail'
            - maxLength: 2083
              minLength: 1
              type: string
              format: uri
          description: Url to the thumbnail of the article
          example: >-
            {'url': 'https://some.website/article/thumb.jpg',
            'rights_clearance': 'approved'
        editorial_requests_count:
          title: Editorial Requests Count
          type: integer
          description: Number of editorial requests.
          default: 0
          example: 42
        score:
          title: Score
          type: number
        recoboxes_count:
          title: Recoboxes Count
          type: integer
          description: Number of recoboxes that article is included in
          default: 0
          example: 2
        metadata:
          $ref: '#/components/schemas/Metadata'
        series:
          title: Series
          type: string
          description: 'If an article is a part of a series, the series id'
        topics:
          title: Topics
          type: array
          items:
            type: string
          description: List of article topics
          hidden_from_schema: true
        summary:
          title: Summary
          type: string
          description: Article summary
        short_description:
          title: Short Description
          type: string
          description: 'If it is defined, a short description of the contents'
        timestamp:
          title: Timestamp
          type: integer
          description: timestamp field used to paginate in user history
      description: Used in lists of articles
    SimplifiedArticleStats:
      title: SimplifiedArticleStats
      required:
        - id
        - organisation
        - original_language
        - language
        - publication_date
        - url
        - title
        - lead
        - contains_media
        - statistics
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Internal provider id
          example: article_id
        organisation:
          title: Organisation
          type: string
          description: Provider organization name
          example: BBC
        version_id:
          title: Version Id
          type: string
        original_language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article original language
          example: en
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Item Language
          example: en
        publication_date:
          title: Publication Date
          type: string
          description: Datetime of article publication
          format: date-time
          example: '2020-07-08T20:50:43Z'
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of article expiration
          format: date-time
          example: '2020-07-08T20:50:43Z'
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        title:
          title: Title
          type: string
          description: The title of the article
        lead:
          title: Lead
          type: string
          description: The lead text of the article
        longest_media_duration:
          title: Longest Media Duration
          type: integer
          description: Duration of the longest media section
        contains_media:
          title: Contains Media
          type: boolean
          description: True if any of the article sections is of media type
        contains_audio:
          title: Contains Audio
          type: boolean
          description: True if any of the article sections contain audio
        contains_video:
          title: Contains Video
          type: boolean
          description: True if any of the article sections contain video
        thumbnail:
          title: Thumbnail
          anyOf:
            - $ref: '#/components/schemas/Thumbnail'
            - maxLength: 2083
              minLength: 1
              type: string
              format: uri
          description: Url to the thumbnail of the article
          example: >-
            {'url': 'https://some.website/article/thumb.jpg',
            'rights_clearance': 'approved'
        editorial_requests_count:
          title: Editorial Requests Count
          type: integer
          description: Number of editorial requests.
          default: 0
          example: 42
        score:
          title: Score
          type: number
        recoboxes_count:
          title: Recoboxes Count
          type: integer
          description: Number of recoboxes that article is included in
          default: 0
          example: 2
        metadata:
          $ref: '#/components/schemas/Metadata'
        series:
          title: Series
          type: string
          description: 'If an article is a part of a series, the series id'
        topics:
          title: Topics
          type: array
          items:
            type: string
          description: List of article topics
          hidden_from_schema: true
        summary:
          title: Summary
          type: string
          description: Article summary
        short_description:
          title: Short Description
          type: string
          description: 'If it is defined, a short description of the contents'
        timestamp:
          title: Timestamp
          type: integer
          description: timestamp field used to paginate in user history
        statistics:
          title: Statistics
          type: array
          items:
            $ref: '#/components/schemas/ArticleStat'
      description: Used in lists of articles
    SimplifiedSeries:
      title: SimplifiedSeries
      required:
        - id
        - title
        - description
        - items
      type: object
      properties:
        id:
          title: Id
          type: string
        title:
          title: Title
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: If series has a thumbnail - the thumbnail
          format: uri
          example: 'https://some.website/thumbnail.png'
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/SimplifiedSeriesItem'
    SimplifiedSeriesItem:
      title: SimplifiedSeriesItem
      required:
        - id
        - title
      type: object
      properties:
        id:
          title: Id
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: If series has a thumbnail - the thumbnail
          format: uri
          example: 'https://some.website/thumbnail.png'
        title:
          title: Title
          type: string
    SortingEnum:
      title: SortingEnum
      enum:
        - publication_date
        - cleared_at
        - score
        - hits
      type: string
      description: An enumeration.
    SourceLanguagesEnum:
      title: SourceLanguagesEnum
      enum:
        - bg
        - cs
        - de
        - es
        - en
        - ge
        - da
        - nl
        - fi
        - fr
        - it
        - lv
        - lt
        - pt
        - ru
        - rm
        - sk
        - sv
        - is
        - zx
        - tr
        - pl
        - hr
        - sr
        - sl
        - ar
        - fa
        - ps
        - 'no'
        - uk
      type: string
      description: The languages that we can mark as original language in medias
    StartThreadBody:
      title: StartThreadBody
      required:
        - access_token
      type: object
      properties:
        access_token:
          title: Access Token
          type: string
          description: User's access token from matrix login.
    StatisticsRangeEnum:
      title: StatisticsRangeEnum
      enum:
        - 24h
        - 7d
        - 30d
        - year
      type: string
      description: An enumeration.
    Subtitles:
      title: Subtitles
      type: object
      properties:
        translation:
          title: Translation
          type: string
          description: URL to the translated subtitles. Only supported format is .srt
        transcription:
          title: Transcription
          type: string
          description: >-
            URL to the original voice transcription. Only supported format is
            .srt
    Summary:
      title: Summary
      required:
        - version_id
        - text
      type: object
      properties:
        version_id:
          title: Version Id
          type: string
          description: Version of the article which was used for the summary
        text:
          title: Text
          type: string
          description: Summary content
        algorithm:
          title: Algorithm
          type: string
          description: The article use
          default: default
    SupportedLanguage:
      title: SupportedLanguage
      required:
        - code
        - description
        - is_filter
        - is_source
        - is_translation_target
        - is_user_preferred
        - is_erb_language
      type: object
      properties:
        code:
          title: Code
          type: string
          description: ISO Code
          example: en
        description:
          title: Description
          type: string
          description: Human readable name
          example: English
        is_filter:
          title: Is Filter
          type: boolean
          description: Can be used as a filter in article feed
          example: true
        is_source:
          title: Is Source
          type: boolean
          description: Can be used as a source language in a media
          example: true
        is_translation_target:
          title: Is Translation Target
          type: boolean
          description: Can be used as a target language in translations
          example: true
        is_user_preferred:
          title: Is User Preferred
          type: boolean
          description: Is in the top 3 user used languages
          example: true
        is_erb_language:
          title: Is Erb Language
          type: boolean
          description: Belongs to the languages used by ERB
          example: true
    Swimline:
      title: Swimline
      required:
        - frequency
      type: object
      properties:
        topics:
          title: Topics
          type: array
          items:
            type: string
        frequency:
          title: Frequency
          type: integer
    TextSearchEnum:
      title: TextSearchEnum
      enum:
        - transcripts
        - sections
        - sections_transcripts
      type: string
      description: An enumeration.
    TextSection:
      title: TextSection
      required:
        - type
        - text
      type: object
      properties:
        type:
          title: Type
          enum:
            - text
          type: string
          description: Section type - 'text'
          example: text
        text:
          title: Text
          type: string
          description: Content of the text.
          example: This is how you define a text.
    Thumbnail:
      title: Thumbnail
      required:
        - url
      type: object
      properties:
        id:
          title: Id
          type: string
          description: If origin uses id - thumbnail id
        origin:
          allOf:
            - $ref: '#/components/schemas/ImageOriginEnum'
          description: Image origin
          default: original
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        rights_clearance:
          allOf:
            - $ref: '#/components/schemas/RightsClearance'
          default: unknown
        rights_locked:
          title: Rights Locked
          type: boolean
          description: Indicates whether the rights_clearance flag can be changed.
          default: false
    TitleSection:
      title: TitleSection
      required:
        - type
        - text
      type: object
      properties:
        type:
          title: Type
          enum:
            - title
          type: string
          description: Section type - 'title'
          example: title
        text:
          title: Text
          type: string
          description: Content of the title.
          example: This is how you define a title.
    TopicPattern:
      title: TopicPattern
      required:
        - swimline
      type: object
      properties:
        swimline:
          $ref: '#/components/schemas/Swimline'
        articles:
          title: Articles
          type: array
          items:
            $ref: '#/components/schemas/VersionedArticle'
          description: List of associated versioned articles
    TopicsBody:
      title: TopicsBody
      required:
        - topics
      type: object
      properties:
        topics:
          title: Topics
          type: array
          items:
            type: object
        from_transcription:
          title: From Transcription
          type: boolean
          default: false
        pos:
          title: Pos
          type: integer
    TrackedEurovoxJob:
      title: TrackedEurovoxJob
      required:
        - name
        - id
        - article_id
        - organisation
        - version_id
        - position
        - user
      type: object
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: string
        article_id:
          title: Article Id
          type: string
        organisation:
          title: Organisation
          type: string
        version_id:
          title: Version Id
          type: string
        position:
          title: Position
          type: integer
          description: Media position in the version that created job is referring to.
        created:
          title: Created
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
    TranslationEnginesEnum:
      title: TranslationEnginesEnum
      enum:
        - DEEPL
        - AWS
        - GOOGLE
        - TEXTSHUTTLE
        - AZURE
      type: string
      description: An enumeration.
    TranslationTypeEnum:
      title: TranslationTypeEnum
      enum:
        - clone
        - render
        - cloned_render
        - transcribe
        - subtitle
      type: string
      description: An enumeration.
    TrendingTopic:
      title: TrendingTopic
      required:
        - trending
      type: object
      properties:
        trending:
          title: Trending
          allOf:
            - $ref: '#/components/schemas/TrendingTopicStats'
          description: Stats object
          example:
            topic: France
            num: 120
    TrendingTopicStats:
      title: TrendingTopicStats
      required:
        - topic
        - num
      type: object
      properties:
        topic:
          title: Topic
          type: string
          description: Name of the topic
          example: France
        num:
          title: Num
          type: integer
          description: Popularity
          example: 120
    TwitterSection:
      title: TwitterSection
      required:
        - type
        - tweet_id
      type: object
      properties:
        type:
          title: Type
          enum:
            - twitter
          type: string
          description: Section type - 'twitter'
          example: twitter
        tweet_id:
          title: Tweet Id
          type: string
          description: Id of a tweet
          example: '1324060283103518721'
    UnarchiveBody:
      title: UnarchiveBody
      required:
        - room_id
      type: object
      properties:
        room_id:
          title: Room Id
          type: string
    UpdateDraftBody:
      title: UpdateDraftBody
      required:
        - type
      type: object
      properties:
        section:
          title: Section
          anyOf:
            - $ref: '#/components/schemas/TextSection'
            - $ref: '#/components/schemas/TitleSection'
            - $ref: '#/components/schemas/LeadSection'
            - $ref: '#/components/schemas/HeaderSection'
            - $ref: '#/components/schemas/ImageSection'
            - $ref: '#/components/schemas/QuoteSection'
            - $ref: '#/components/schemas/VerbatimSection'
            - $ref: '#/components/schemas/TwitterSection'
            - $ref: '#/components/schemas/InstagramSection'
            - $ref: '#/components/schemas/ImageSectionFallback'
            - $ref: '#/components/schemas/LinkSection'
            - $ref: '#/components/schemas/ListSection'
            - $ref: '#/components/schemas/YoutubeSection'
            - $ref: '#/components/schemas/MetadataSection'
            - $ref: '#/components/schemas/MediaSection'
            - $ref: '#/components/schemas/AuthorSection'
        position:
          title: Position
          type: integer
        type:
          $ref: '#/components/schemas/UpdateDraftEnum'
        url:
          title: Url
          type: string
          description: Optional url for thumbnail update.
    UpdateDraftEnum:
      title: UpdateDraftEnum
      enum:
        - update
        - update_thumbnail
        - insert
        - deletion
      type: string
      description: An enumeration.
    User:
      title: User
      required:
        - id
        - name
        - email
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Keycloak User ID
          example: user_id
        name:
          title: Name
          type: string
          description: User's name
          example: William McFly
        email:
          title: Email
          type: string
          description: User's email
          example: wmcfly@ebu.ch
        groups:
          title: Groups
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: Keycloak User groups
          example: '[''editors'', ''analysts'']'
        attributes:
          title: Attributes
          type: object
          description: User's Attributes
          example: '{''ebu-sso-code-ops'': ''ZZEBU''}'
        organisation:
          title: Organisation
          type: string
          description: Pilot organisation string
          example: BR
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    VerbatimSection:
      title: VerbatimSection
      required:
        - type
        - content
      type: object
      properties:
        type:
          title: Type
          enum:
            - verbatim
          type: string
          description: Section type - 'verbatim'
          example: verbatim
        content:
          title: Content
          type: string
          description: Shown as is without translation
          example: some text
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the section
          format: uri
          example: 'https://some.website/article#section'
        ratio:
          title: Ratio
          type: number
          description: Ratio of iframe dimensions
          example: 1.78
    VersionTopics:
      title: VersionTopics
      required:
        - article_id
        - organisation
        - version_id
      type: object
      properties:
        article_id:
          title: Article Id
          type: string
          description: Original article identifier
        organisation:
          title: Organisation
          type: string
          description: Article's organisation
        version_id:
          title: Version Id
          type: string
          description: Article's version
        from_transcription:
          title: From Transcription
          type: boolean
          description: Either topics were extracted from transcript.
          default: false
        pos:
          title: Pos
          type: integer
        topics:
          title: Topics
          type: array
          items:
            type: object
          description: List of article topics from REL
          example:
            - start_position: 56
              mention: Rein
              topic: Rein
              score: 0.875
              tag: LOC
    VersionedArticle:
      title: VersionedArticle
      required:
        - id
        - organisation
        - original_language
        - url
        - publication_date
        - versions
      type: object
      properties:
        _id:
          title: ' Id'
          type: string
          description: MongoDB internal id
          example: ObjectId('616e9314a4a552f3345ee88e')
        id:
          title: Id
          type: string
          description: Internal provider id
          example: article_id
        organisation:
          title: Organisation
          type: string
          description: Provider organization name
          example: BBC
        original_language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article original language
          example: en
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        categories:
          title: Categories
          uniqueItems: true
          type: array
          items:
            type: string
          description: List of article categories
          example:
            - news
            - local
        tags:
          title: Tags
          uniqueItems: true
          type: array
          items:
            type: string
          description: List of article tags
          example:
            - news
            - local
        author:
          title: Author
          type: string
          description: Name of the author of the article
          example: Some Author
        publication_date:
          title: Publication Date
          type: string
          description: Datetime of article publication
          format: date-time
          example: '2020-07-08T20:50:43Z'
        modification_date:
          title: Modification Date
          type: string
          description: Datetime of model's modification time
          format: date-time
          example: '2020-07-08T20:50:43Z'
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of article expiration
          format: date-time
          example: '2020-07-08T20:50:43Z'
        longest_media_duration:
          title: Longest Media Duration
          type: integer
          description: Duration of the longest media section
        contains_media:
          title: Contains Media
          type: boolean
          description: Whether the article contains any media sections
          default: false
        contains_video:
          title: Contains Video
          type: boolean
          description: Whether the article contains video media section
          default: false
          example: 'True'
        contains_audio:
          title: Contains Audio
          type: boolean
          description: Whether the article contains audio media section
          default: false
          example: 'True'
        versions:
          title: Versions
          type: array
          items:
            $ref: '#/components/schemas/ArticleVersion'
          description: Available versions of the article
        languages:
          type: array
          items:
            $ref: '#/components/schemas/LanguageEnum'
          description: List of available languages
          example:
            - en
            - de
            - fr
        editorial_requests:
          title: Editorial Requests
          type: array
          items:
            $ref: '#/components/schemas/EditorialRequest'
          description: List of editorial requests.
          example:
            - user:
                id: '1234567'
                name: Pawel Glimos
              date: '2024-05-08T10:20:10.917623'
        editorial_requests_count:
          title: Editorial Requests Count
          type: integer
        score:
          title: Score
          type: number
        topics:
          title: Topics
          type: array
          items:
            $ref: '#/components/schemas/VersionTopics'
          description: List of article topics
        topics_flat:
          title: Topics Flat
          type: array
          items:
            type: string
          description: List of flatten topics for elasticsearch
        summary:
          title: Summary
          allOf:
            - $ref: '#/components/schemas/Summary'
          description: Summary of an article
        recoboxes:
          title: Recoboxes
          type: array
          items:
            type: string
          description: List of recoboxes' uuids that contain given article.
        editorial_selection_recoboxes:
          title: Editorial Selection Recoboxes
          type: array
          items:
            type: string
          description: >-
            List of editorial selection recoboxes' uuids that contain given
            article.
        metadata:
          $ref: '#/components/schemas/Metadata'
        favourites:
          title: Favourites
          type: array
          items:
            type: string
          description: List of favourites lists uuids.
        series:
          title: Series
          type: string
          description: 'If an article is a part of a series, the series id'
        matrix_thread_id:
          title: Matrix Thread Id
          type: string
          description: Matrix thread id used for identifying conversation thread.
        public_service_algorithm:
          $ref: '#/components/schemas/PublicServiceAlgorithmValues'
        psa:
          title: Psa
          type: array
          items:
            $ref: '#/components/schemas/PSAValue'
        matrix_room:
          $ref: '#/components/schemas/MatrixRoom'
        drafts:
          title: Drafts
          type: array
          items:
            type: object
      description: |-
        What we store in DB
        Contains array of immutable ArticleVersions
    WebhookBody:
      title: WebhookBody
      required:
        - article_id
        - organisation
        - version_id
        - position
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ProcessedJobStatusEnum'
          description: Job status
          default: success
        details:
          title: Details
          type: string
          description: Optional details of reported job
        job_id:
          title: Job Id
          type: string
          description: Job identifier
        job_name:
          title: Job Name
          type: string
          description: Job name identifier
        article_id:
          title: Article Id
          type: string
          description: Original article identifier
        organisation:
          title: Organisation
          type: string
          description: Article's organisation
        version_id:
          title: Version Id
          type: string
          description: Article's version
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the archive
          format: uri
        position:
          title: Position
          type: integer
          description: Position of the media file in the article's sections
        workflow_type:
          allOf:
            - $ref: '#/components/schemas/TranslationTypeEnum'
          description: 'Eurovox translation job type: clone or render'
        user_id:
          title: User Id
          type: string
        user_name:
          title: User Name
          type: string
        user_email:
          title: User Email
          type: string
        user_organisation:
          title: User Organisation
          type: string
    WidgetArticle:
      title: WidgetArticle
      required:
        - id
        - organisation
        - version_id
        - original_language
        - language
        - publication_date
        - url
        - title
        - lead
        - contains_media
        - pilot_url
        - organisation_logo
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Internal provider id
          example: article_id
        organisation:
          title: Organisation
          type: string
          description: Provider organization name
          example: BBC
        version_id:
          title: Version Id
          type: string
          description: Id of the version used to create article
          example: 12312-12332
        original_language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Article original language
          example: en
        language:
          allOf:
            - $ref: '#/components/schemas/LanguageEnum'
          description: Item Language
          example: en
        publication_date:
          title: Publication Date
          type: string
          description: Datetime of article publication
          format: date-time
          example: '2020-07-08T20:50:43Z'
        expiration_date:
          title: Expiration Date
          type: string
          description: Datetime of article expiration
          format: date-time
          example: '2020-07-08T20:50:43Z'
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the article
          format: uri
          example: 'https://some.website/article.html'
        title:
          title: Title
          type: string
          description: The title of the article
        lead:
          title: Lead
          type: string
          description: The lead text of the article
        longest_media_duration:
          title: Longest Media Duration
          type: integer
          description: Duration of the longest media section
        contains_media:
          title: Contains Media
          type: boolean
          description: True if any of the article sections is of media type
        contains_audio:
          title: Contains Audio
          type: boolean
          description: True if any of the article sections contain audio
        contains_video:
          title: Contains Video
          type: boolean
          description: True if any of the article sections contain video
        thumbnail:
          title: Thumbnail
          anyOf:
            - $ref: '#/components/schemas/Thumbnail'
            - maxLength: 2083
              minLength: 1
              type: string
              format: uri
          description: Url to the thumbnail of the article
          example: >-
            {'url': 'https://some.website/article/thumb.jpg',
            'rights_clearance': 'approved'
        editorial_requests_count:
          title: Editorial Requests Count
          type: integer
          description: Number of editorial requests.
          default: 0
          example: 42
        score:
          title: Score
          type: number
        recoboxes_count:
          title: Recoboxes Count
          type: integer
          description: Number of recoboxes that article is included in
          default: 0
          example: 2
        metadata:
          $ref: '#/components/schemas/Metadata'
        series:
          title: Series
          type: string
          description: 'If an article is a part of a series, the series id'
        topics:
          title: Topics
          type: array
          items:
            type: string
          description: List of article topics
          hidden_from_schema: true
        summary:
          title: Summary
          type: string
          description: Article summary
        short_description:
          title: Short Description
          type: string
          description: 'If it is defined, a short description of the contents'
        timestamp:
          title: Timestamp
          type: integer
          description: timestamp field used to paginate in user history
        pilot_url:
          title: Pilot Url
          maxLength: 2083
          minLength: 1
          type: string
          description: The url to the pilot article
          format: uri
          example: 'https://some.website/article.html'
        organisation_logo:
          title: Organisation Logo
          maxLength: 2083
          minLength: 1
          type: string
          description: The url to the organisation logo
          format: uri
          example: 'https://some.website/article.html'
      description: Used in lists of articles
    WithdrawalReason:
      title: WithdrawalReason
      required:
        - text
      type: object
      properties:
        text:
          title: Text
          type: string
          description: Reason for withdrawal
    YoutubeSection:
      title: YoutubeSection
      required:
        - type
        - video_id
      type: object
      properties:
        type:
          title: Type
          enum:
            - youtube
          type: string
          description: Section type - 'youtube'
          example: youtube
        video_id:
          title: Video Id
          type: string
          description: Id of a youtube video.
          example: OxZs4-cCcw4
        title:
          title: Title
          type: string
          description: Title of the video.
          example: >-
            Giant Sulking Dog Hates Bath Time Throws Tantrum And Does Everything
            To Avoid It!
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >-
        All of the API endpoints use JWT authentication. To obtain them you need
        client_id and client_secret. Those are generated per organisation. If
        you have the required credentials obtaining a token is as simple as
        sending a GET request to `/api/oauth/access_token`.
